import{V as l,M as m,z as u,R as p,m as g,t as n,v as d,w as _}from"./index-15bfda31.js";import{m as w,c as y,C as f,T as k,j as M,S as v,O as V}from"./Stop-0cddba1b.js";import{f as G,d as I}from"./LayerView-6963c098.js";import{i as F}from"./GraphicContainer-689f3cdf.js";import{o as H}from"./GraphicsView2D-cf252383.js";import"./Container-54d8fada.js";import"./definitions-0a086491.js";import"./enums-b14466b3.js";import"./Texture-883f5263.js";import"./color-34a435e3.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-79c9509b.js";import"./FeatureContainer-e0a0bfe9.js";import"./AttributeStoreView-2fc02948.js";import"./TiledDisplayObject-2731c918.js";import"./WGLContainer-8e2e2001.js";import"./VertexArrayObject-163e1eff.js";import"./ProgramTemplate-055769ff.js";import"./GeometryUtils-e8e70eb8.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-8827fc6a.js";import"./featureConversionUtils-2143b43a.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-63a2a7e0.js";import"./ExpandedCIM-580d1f7d.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-1719eb33.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-326a5890.js";import"./floatRGBA-f2126a37.js";import"./util-84035865.js";import"./TileContainer-a9a4b2f9.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-06f22fe0.js";import"./normalizeUtilsCommon-7f371846.js";import"./utils-01f4694e.js";import"./normalizeUtilsSync-d1990763.js";import"./projectionSupport-02c712cc.js";import"./json-48e3ea08.js";import"./Matcher-db62befb.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-261a805b.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-2618b1cd.js";import"./ComputedAttributeStorage-d9d3651c.js";import"./arcadeTimeUtils-605da938.js";import"./executionError-c92d3b85.js";const C=Object.freeze({remove(){},pause(){},resume(){}}),U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],a={graphic:null,property:null,oldValue:null,newValue:null};function c(t){return t instanceof w||t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof v||t instanceof V}function b(t){return l.isCollection(t)&&t.length&&c(t.at(0))}function O(t){return Array.isArray(t)&&t.length>0&&c(t[0])}let o=class extends G(I){constructor(){super(...arguments),this._graphics=new l,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new m({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new l([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(e=>!!e.popupTemplate)}highlight(t){let e;e=c(t)?[this._getNetworkFeatureUid(t)]:O(t)?t.map(r=>this._getNetworkFeatureUid(r)):b(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const i=e.filter(p);return i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):C}async hitTest(t,e){if(this.suspended)return null;const i=this._graphicsView.hitTest(t).filter(p).map(s=>this._networkGraphicMap.get(s));if(!i.length)return null;const{layer:r}=this;return i.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_createGraphic(t){const e=t.toGraphic();return e.layer=this.layer,e.sourceLayer=this.layer,e}_createGraphicsView(){const t=this.view,e=()=>this.requestUpdate(),i=new F(t.featuresTilingScheme);this._graphicsView=new H({container:i,graphics:this._graphics,requestUpdateCallback:e,view:t}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const e=this._networkGraphicMap.get(t);return U.indexOf(e.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;i===0?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(e=>{const i=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(i),i}));for(const e of t.removed)this.removeHandles(e)}if(t.added.length){this._graphics.addMany(t.added.map(e=>{const i=this._createGraphic(e);return i.symbol==null?null:(this._networkFeatureMap.set(e,i),this._networkGraphicMap.set(i,e),i)}).filter(p));for(const e of t.added)this.addHandles([g(()=>e.geometry,(i,r)=>{this._updateGraphic(e,"geometry",i,r)}),g(()=>e.symbol,(i,r)=>{this._updateGraphic(e,"symbol",i,r)})],e);this._graphics.sort((e,i)=>this._getDrawOrder(e)-this._getDrawOrder(i))}}_updateGraphic(t,e,i,r){if(!this._networkFeatureMap.has(t)){const h=this._createGraphic(t);return this._networkFeatureMap.set(t,h),this._networkGraphicMap.set(h,t),void this._graphics.add(h)}const s=this._networkFeatureMap.get(t);s[e]=i,a.graphic=s,a.property=e,a.oldValue=r,a.newValue=i,this._graphicsView.graphicUpdateHandler(a)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};n([d()],o.prototype,"_graphics",void 0),n([d()],o.prototype,"_routeItems",null),o=n([_("esri.views.2d.layers.RouteLayerView2D")],o);const Ut=o;export{Ut as default};
