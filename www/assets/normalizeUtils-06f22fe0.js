import{cb as X,aa as k,dz as W,ag as _,s as D,bi as G,W as C,a3 as M,fF as J,a_ as O,fG as B,a as E}from"./index-15bfda31.js";import{r as v,o as z,i as R,s as F}from"./normalizeUtilsCommon-7f371846.js";import{f as H,r as K,o as Q}from"./utils-01f4694e.js";async function V(t,s,f,n){const e=H(t),c=s[0].spatialReference,a={...n,query:{...e.query,f:"json",sr:JSON.stringify(c),target:JSON.stringify({geometryType:X(s[0]),geometries:s}),cutter:JSON.stringify(f)}},o=await k(e.path+"/cut",a),{cutIndexes:u,geometries:y=[]}=o.data;return{cutIndexes:u,geometries:y.map(h=>{const x=W(h);return x.spatialReference=c,x})}}async function Y(t,s,f){const n=typeof t=="string"?_(t):t,e=s[0].spatialReference,c=X(s[0]),a={...f,query:{...n.query,f:"json",sr:e.wkid??JSON.stringify(e),geometries:JSON.stringify(K(s))}},{data:o}=await k(n.path+"/simplify",a);return Q(o.geometries,c,e)}const T=D.getLogger("esri.geometry.support.normalizeUtils");function Z(t){return t.type==="polygon"}function tt(t){return t[0].type==="polygon"}function et(t){return t[0].type==="polyline"}function st(t,s){if(!(t instanceof M||t instanceof O)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw T.error(e),new E(e)}const f=z(t),n=[];for(const e of f){const c=[];n.push(c),c.push([e[0][0],e[0][1]]);for(let a=0;a<e.length-1;a++){const o=e[a][0],u=e[a][1],y=e[a+1][0],h=e[a+1][1],x=Math.sqrt((y-o)*(y-o)+(h-u)*(h-u)),l=(h-u)/x,m=(y-o)/x,p=x/s;if(p>1){for(let S=1;S<=p-1;S++){const b=S*s,r=m*b+o,i=l*b+u;c.push([r,i])}const w=(x+Math.floor(p-1)*s)/2,j=m*w+o,A=l*w+u;c.push([j,A])}c.push([y,h])}}return Z(t)?new O({rings:n,spatialReference:t.spatialReference}):new M({paths:n,spatialReference:t.spatialReference})}function P(t,s,f){if(s){const n=st(t,1e6);t=B(n,!0)}return f&&(t=F(t,f)),t}function U(t,s,f){if(Array.isArray(t)){const n=t[0];if(n>s){const e=R(n,s);t[0]=n+e*(-2*s)}else if(n<f){const e=R(n,f);t[0]=n+e*(-2*f)}}else{const n=t.x;if(n>s){const e=R(n,s);t=t.clone().offset(e*(-2*s),0)}else if(n<f){const e=R(n,f);t=t.clone().offset(e*(-2*f),0)}}return t}function nt(t,s){let f=-1;for(let n=0;n<s.cutIndexes.length;n++){const e=s.cutIndexes[n],c=s.geometries[n],a=z(c);for(let o=0;o<a.length;o++){const u=a[o];u.some(y=>{if(y[0]<180)return!0;{let h=0;for(let l=0;l<u.length;l++){const m=u[l][0];h=m>h?m:h}h=Number(h.toFixed(9));const x=-360*R(h,180);for(let l=0;l<u.length;l++){const m=c.getPoint(o,l);c.setPoint(o,l,m.clone().offset(x,0))}return!0}})}if(e===f){if(tt(t))for(const o of z(c))t[e]=t[e].addRing(o);else if(et(t))for(const o of z(c))t[e]=t[e].addPath(o)}else f=e,t[e]=c}return t}async function ot(t,s,f){if(!Array.isArray(t))return ot([t],s);s&&typeof s!="string"&&T.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const n=typeof s=="string"?s:(s==null?void 0:s.url)??G.geometryServiceUrl;let e,c,a,o,u,y,h,x,l=0;const m=[],p=[];for(const r of t)if(r!=null)if(e||(e=r.spatialReference,c=C(e),a=e.isWebMercator,y=a?102100:4326,o=v[y].maxX,u=v[y].minX,h=v[y].plus180Line,x=v[y].minus180Line),c)if(r.type==="mesh")p.push(r);else if(r.type==="point")p.push(U(r.clone(),o,u));else if(r.type==="multipoint"){const i=r.clone();i.points=i.points.map(g=>U(g,o,u)),p.push(i)}else if(r.type==="extent"){const i=r.clone()._normalize(!1,!1,c);p.push(i.rings?new O(i):i)}else if(r.extent){const i=r.extent,g=R(i.xmin,u)*(2*o);let d=g===0?r.clone():F(r.clone(),g);i.offset(g,0),i.intersects(h)&&i.xmax!==o?(l=i.xmax>l?i.xmax:l,d=P(d,a),m.push(d),p.push("cut")):i.intersects(x)&&i.xmin!==u?(l=i.xmax*(2*o)>l?i.xmax*(2*o):l,d=P(d,a,360),m.push(d),p.push("cut")):p.push(d)}else p.push(r.clone());else p.push(r);else p.push(r);let w=R(l,o),j=-90;const A=w,S=new M;for(;w>0;){const r=360*w-180;S.addPath([[r,j],[r,-1*j]]),j*=-1,w--}if(m.length>0&&A>0){const r=nt(m,await V(n,m,S,f)),i=[],g=[];for(let $=0;$<p.length;$++){const L=p[$];if(L!=="cut")g.push(L);else{const q=r.shift(),N=t[$];N!=null&&N.type==="polygon"&&N.rings&&N.rings.length>1&&q.rings.length>=N.rings.length?(i.push(q),g.push("simplify")):g.push(a?J(q):q)}}if(!i.length)return g;const d=await Y(n,i,f),I=[];for(let $=0;$<g.length;$++){const L=g[$];L!=="simplify"?I.push(L):I.push(a?J(d.shift()):d.shift())}return I}const b=[];for(let r=0;r<p.length;r++){const i=p[r];if(i!=="cut")b.push(i);else{const g=m.shift();b.push(a===!0?J(g):g)}}return b}function ct(t,s){const f=C(s);if(f){const[n,e]=f.valid,c=e-n;if(t<n)for(;t<n;)t+=c;if(t>e)for(;t>e;)t-=c}return t}export{ot as b,ct as v};
