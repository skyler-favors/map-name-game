import{F as p,G as o,V as a,R as g,t as s,v as m,w as l}from"./index-15bfda31.js";import{f as c,d as n}from"./LayerView-6963c098.js";import{i as d}from"./GraphicContainer-689f3cdf.js";import{o as u}from"./GraphicsView2D-cf252383.js";import"./Container-54d8fada.js";import"./definitions-0a086491.js";import"./enums-b14466b3.js";import"./Texture-883f5263.js";import"./color-34a435e3.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-79c9509b.js";import"./FeatureContainer-e0a0bfe9.js";import"./AttributeStoreView-2fc02948.js";import"./TiledDisplayObject-2731c918.js";import"./WGLContainer-8e2e2001.js";import"./VertexArrayObject-163e1eff.js";import"./ProgramTemplate-055769ff.js";import"./GeometryUtils-e8e70eb8.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-8827fc6a.js";import"./featureConversionUtils-2143b43a.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-63a2a7e0.js";import"./ExpandedCIM-580d1f7d.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-1719eb33.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-326a5890.js";import"./floatRGBA-f2126a37.js";import"./util-84035865.js";import"./TileContainer-a9a4b2f9.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-06f22fe0.js";import"./normalizeUtilsCommon-7f371846.js";import"./utils-01f4694e.js";import"./normalizeUtilsSync-d1990763.js";import"./projectionSupport-02c712cc.js";import"./json-48e3ea08.js";import"./Matcher-db62befb.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-261a805b.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-2618b1cd.js";import"./ComputedAttributeStorage-d9d3651c.js";import"./arcadeTimeUtils-605da938.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ni=e;export{ni as default};
