import{j as k,em as L,co as Z,c2 as st,c4 as it,aI as Y,aH as S,s as rt,hs as K,hq as nt,cm as C,fN as q,hf as at,fD as ot,gI as ht,j3 as ct}from"./index-15bfda31.js";import{K as ft,k as lt}from"./quat-9ee7b7f1.js";import{o as ut,r as pt,e as dt}from"./quatf64-3363c48e.js";import{m as _t}from"./MeshGeoreferencedRelativeVertexSpace-f6ded274.js";import{p as mt}from"./MeshLocalVertexSpace-5ff5723d.js";import{c as gt}from"./meshFeatureSet-f29e615b.js";import{E as wt}from"./georeference-6cb303d4.js";import{C as u,D as A}from"./enums-b14466b3.js";import{r as j,a as Tt,g as At,c as bt}from"./imageutils-66e57d69.js";import{t as v}from"./resourceUtils-1d112ccb.js";import"./mat3f64-221ce671.js";import"./imageUtils-c2d0d1ae.js";import"./earcut-8827fc6a.js";import"./Indices-b6a8db41.js";import"./deduplicate-1a48f789.js";import"./FeatureLayerSource-1d16ce65.js";import"./mat4f64-1413b4a7.js";import"./vec32-951c751f.js";import"./editingSupport-837962fd.js";import"./normalizeUtils-06f22fe0.js";import"./normalizeUtilsCommon-7f371846.js";import"./utils-01f4694e.js";import"./clientSideDefaults-4b748b09.js";import"./QueryEngineCapabilities-42e44ded.js";import"./QueryTask-131a4ce0.js";import"./executeForIds-f67450d5.js";import"./query-6521c192.js";import"./pbfQueryUtils-47bb6df3.js";import"./pbf-94467490.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./executeQueryJSON-568dc18f.js";import"./executeQueryPBF-a60908bd.js";import"./featureConversionUtils-2143b43a.js";import"./spatialReferenceEllipsoidUtils-00f4da94.js";import"./BufferView-b77e86e6.js";import"./basicInterfaces-4ab7cc6a.js";var z;(function(r){r[r.JSON=1313821514]="JSON",r[r.BIN=5130562]="BIN"})(z||(z={}));class T{constructor(t,e){if(!t)throw new Error("GLB requires a JSON gltf chunk");this._length=T.HEADER_SIZE,this._length+=T.CHUNK_HEADER_SIZE;const s=this._textToArrayBuffer(t);if(this._length+=this._alignTo(s.byteLength,4),e&&(this._length+=T.CHUNK_HEADER_SIZE,this._length+=e.byteLength,e.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const i=this._writeChunk(s,12,z.JSON,32);e&&this._writeChunk(e,i,z.BIN)}_writeHeader(){this._outView.setUint32(0,T.MAGIC,!0),this._outView.setUint32(4,T.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(t,e,s,i=0){const n=this._alignTo(t.byteLength,4);for(this._outView.setUint32(e,n,!0),this._outView.setUint32(e+=4,s,!0),this._writeArrayBuffer(this._outView.buffer,t,e+=4,0,t.byteLength),e+=t.byteLength;e%4;)i&&this._outView.setUint8(e,i),e++;return e}_writeArrayBuffer(t,e,s,i,n){new Uint8Array(t,s,n).set(new Uint8Array(e,i,n),0)}_textToArrayBuffer(t){return new TextEncoder().encode(t).buffer}_alignTo(t,e){return e*Math.ceil(t/e)}}T.HEADER_SIZE=12,T.CHUNK_HEADER_SIZE=8,T.MAGIC=1179937895,T.VERSION=2;var R,b,E,w,J,V,W;(function(r){r[r.External=0]="External",r[r.DataURI=1]="DataURI",r[r.GLB=2]="GLB"})(R||(R={})),function(r){r[r.External=0]="External",r[r.DataURI=1]="DataURI",r[r.GLB=2]="GLB"}(b||(b={})),function(r){r[r.ARRAY_BUFFER=34962]="ARRAY_BUFFER",r[r.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(E||(E={})),function(r){r.SCALAR="SCALAR",r.VEC2="VEC2",r.VEC3="VEC3",r.VEC4="VEC4",r.MAT2="MAT2",r.MAT3="MAT3",r.MAT4="MAT4"}(w||(w={})),function(r){r[r.POINTS=0]="POINTS",r[r.LINES=1]="LINES",r[r.LINE_LOOP=2]="LINE_LOOP",r[r.LINE_STRIP=3]="LINE_STRIP",r[r.TRIANGLES=4]="TRIANGLES",r[r.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",r[r.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(J||(J={})),function(r){r.OPAQUE="OPAQUE",r.MASK="MASK",r.BLEND="BLEND"}(V||(V={})),function(r){r[r.NoColor=0]="NoColor",r[r.FaceColor=1]="FaceColor",r[r.VertexColor=2]="VertexColor"}(W||(W={}));let yt=class{constructor(t,e,s,i,n){this._buffer=t,this._componentType=s,this._dataType=i,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,e.bufferViews||(e.bufferViews=[]),this.index=e.bufferViews.length,this._bufferView={buffer:t.index,byteLength:-1,target:n};const a=this._getElementSize();a>=4&&n!==E.ELEMENT_ARRAY_BUFFER&&(this._bufferView.byteStride=a),e.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(t){const e=this._data.length;if(this._data.push(t),this._accessorIndex>=0){const s=e%this._numComponentsForDataType,i=this._accessorMin[s];this._accessorMin[s]=typeof i!="number"?t:Math.min(i,t);const n=this._accessorMax[s];this._accessorMax[s]=typeof n!="number"?t:Math.max(n,t)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){function t(e,s){return s*Math.ceil(e/s)}return t(this.dataSize,4)}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(t,e){switch(this._componentType){case u.BYTE:return new Int8Array(t,e);case u.FLOAT:return new Float32Array(t,e);case u.SHORT:return new Int16Array(t,e);case u.UNSIGNED_BYTE:return new Uint8Array(t,e);case u.UNSIGNED_INT:return new Uint32Array(t,e);case u.UNSIGNED_SHORT:return new Uint16Array(t,e)}}writeOutToBuffer(t,e){this._createTypedArray(t,e).set(this._data)}writeAsync(t){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=t.then(e=>{const s=new Uint8Array(e);for(let i=0;i<s.length;++i)this._data.push(s[i]);delete this._asyncWritePromise}),this._asyncWritePromise}startAccessor(t){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=t;const e=this._numComponentsForDataType;this._accessorMin=new Array(e),this._accessorMax=new Array(e)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const t=this._getElementSize(),e=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/e;if(s%1)throw new Error("An accessor was ended with missing component values");for(let n=0;n<this._accessorMin.length;++n)typeof this._accessorMin[n]!="number"&&(this._accessorMin[n]=0),typeof this._accessorMax[n]!="number"&&(this._accessorMax[n]=0);const i={byteOffset:t*(this._accessorIndex/e),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case u.UNSIGNED_BYTE:case u.UNSIGNED_SHORT:i.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,i}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise(t=>this._finalizedPromiseResolve=t)}finalize(){const t=this._bufferView;return new Promise(e=>{const s=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&s.push(this._asyncWritePromise),e(k(s))}).then(()=>{this._isFinalized=!0,t.byteOffset=this.getByteOffset(),t.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()})}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case u.BYTE:case u.UNSIGNED_BYTE:return 1;case u.SHORT:case u.UNSIGNED_SHORT:return 2;case u.UNSIGNED_INT:case u.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case w.SCALAR:return 1;case w.VEC2:return 2;case w.VEC3:return 3;case w.VEC4:case w.MAT2:return 4;case w.MAT3:return 9;case w.MAT4:return 16}}},X=class{constructor(t){this._gltf=t,this._bufferViews=[],this._isFinalized=!1,t.buffers||(t.buffers=[]),this.index=t.buffers.length;const e={byteLength:-1};t.buffers.push(e),this._buffer=e}addBufferView(t,e,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const i=new yt(this,this._gltf,t,e,s);return this._bufferViews.push(i),i}getByteOffset(t){let e=0;for(const s of this._bufferViews){if(s===t)return e;e+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(t){const e=[];for(const s of this._bufferViews){if(t&&s===t)return e;e.push(s.finalized)}return e}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const t=this._getTotalSize(),e=new ArrayBuffer(t);let s=0;for(const i of this._bufferViews)i.writeOutToBuffer(e,s),s+=i.byteSize;return e}finalize(){var t;if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=new Promise(e=>{e(k(this.getViewFinalizePromises()))}).then(()=>{this._isFinalized=!0;const e=this.getArrayBuffer();this._buffer.byteLength=e.byteLength,this._buffer.uri=e}),(t=this._gltf.extras)==null||t.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let t=0;for(const e of this._bufferViews)t+=e.byteSize;return t}};function xt(r,t){if(r.components)for(const e of r.components)e.faces&&e.shading==="smooth"&&Et(e,t)}function Et(r,t){t.normal==null&&(t.normal=new Float32Array(t.position.length));const e=r.faces,{position:s,normal:i}=t,n=e.length/3;for(let a=0;a<n;++a){const o=3*e[3*a],h=3*e[3*a+1],p=3*e[3*a+2],m=L(Nt,s[o],s[o+1],s[o+2]),d=L(It,s[h],s[h+1],s[h+2]),f=L(Ot,s[p],s[p+1],s[p+2]),g=Z(d,d,m),_=Z(f,f,m),l=st(g,g,_);i[o]+=l[0],i[o+1]+=l[1],i[o+2]+=l[2],i[h]+=l[0],i[h+1]+=l[1],i[h+2]+=l[2],i[p]+=l[0],i[p+1]+=l[1],i[p+2]+=l[2]}for(let a=0;a<i.length;a+=3)L(N,i[a],i[a+1],i[a+2]),it(N,N),i[a]=N[0],i[a+1]=N[1],i[a+2]=N[2]}function Rt(r){const{vertexSpace:t}=r;if(t.isRelative)return t.getOriginPoint(r.spatialReference);const{extent:e}=r,s=e.xmax-e.width/2,i=e.ymax-e.height/2,n=e.zmin;return new Y({x:s,y:i,z:n,spatialReference:e.spatialReference})}const Nt=S(),It=S(),Ot=S(),N=S(),$=rt.getLogger("gltf");class St{constructor(t,e,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:t.copyright,generator:t.generator},extras:{options:e,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(t)}_addScenes(t){this.gltf.scene=t.defaultScene;const e=this.gltf.extras,s=e.options.bufferOutputType===R.GLB||e.options.imageOutputType===b.GLB;s&&(e.binChunkBuffer=new X(this.gltf)),t.forEachScene(i=>{this._addScene(i)}),s&&e.binChunkBuffer.finalize()}_addScene(t){this.gltf.scenes||(this.gltf.scenes=[]);const e={};t.name&&(e.name=t.name),t.forEachNode(s=>{e.nodes||(e.nodes=[]);const i=this._addNode(s);e.nodes.push(i)}),this.gltf.scenes.push(e)}_addNode(t){this.gltf.nodes||(this.gltf.nodes=[]);const e={};t.name&&(e.name=t.name);const s=t.translation;K(s,nt)||(e.translation=C(s));const i=t.rotation;ft(i,ut)||(e.rotation=pt(i));const n=t.scale;K(n,q)||(e.scale=C(n)),t.mesh&&t.mesh.vertexAttributes.position?e.mesh=this._addMesh(t.mesh):t.forEachNode(o=>{e.children||(e.children=[]);const h=this._addNode(o);e.children.push(h)});const a=this.gltf.nodes.length;return this.gltf.nodes.push(e),a}_addMesh(t){this.gltf.meshes||(this.gltf.meshes=[]);const e={primitives:[]},s=this.gltf.extras,i=s.options.bufferOutputType===R.GLB;let n;n=i?s.binChunkBuffer:new X(this.gltf),this.params.origin||(this.params.origin=Rt(t));const{ignoreLocalTransform:a}=this.params,o=a?null:t.transform,{vertexSpace:h}=t,p=a?h.isRelative?new _t({origin:C(h.origin)}):new mt:h,m=wt(t.vertexAttributes,p,o,this.params.origin,{geographic:this.params.geographic,unit:"meters"});xt(t,m),this._flipYZAxis(m);const d=n.addBufferView(u.FLOAT,w.VEC3,E.ARRAY_BUFFER);let f,g,_,l;m.normal&&(f=n.addBufferView(u.FLOAT,w.VEC3,E.ARRAY_BUFFER)),t.vertexAttributes.uv&&(g=n.addBufferView(u.FLOAT,w.VEC2,E.ARRAY_BUFFER)),m.tangent&&(_=n.addBufferView(u.FLOAT,w.VEC4,E.ARRAY_BUFFER)),t.vertexAttributes.color&&(l=n.addBufferView(u.UNSIGNED_BYTE,w.VEC4,E.ARRAY_BUFFER)),d.startAccessor("POSITION"),f&&f.startAccessor("NORMAL"),g&&g.startAccessor("TEXCOORD_0"),_&&_.startAccessor("TANGENT"),l&&l.startAccessor("COLOR_0");const y=m.position.length/3,{position:x,normal:M,tangent:I}=m,{color:O,uv:F}=t.vertexAttributes;for(let c=0;c<y;++c)d.push(x[3*c]),d.push(x[3*c+1]),d.push(x[3*c+2]),f&&M!=null&&(f.push(M[3*c]),f.push(M[3*c+1]),f.push(M[3*c+2])),g&&F!=null&&(g.push(F[2*c]),g.push(F[2*c+1])),_&&I!=null&&(_.push(I[4*c]),_.push(I[4*c+1]),_.push(I[4*c+2]),_.push(I[4*c+3])),l&&O!=null&&(l.push(O[4*c]),l.push(O[4*c+1]),l.push(O[4*c+2]),l.push(O[4*c+3]));const tt=d.endAccessor(),H=this._addAccessor(d.index,tt);let D,P,G,U,B;if(f){const c=f.endAccessor();D=this._addAccessor(f.index,c)}if(g){const c=g.endAccessor();P=this._addAccessor(g.index,c)}if(_){const c=_.endAccessor();G=this._addAccessor(_.index,c)}if(l){const c=l.endAccessor();U=this._addAccessor(l.index,c)}t.components&&t.components.length>0&&t.components[0].faces?(B=n.addBufferView(u.UNSIGNED_INT,w.SCALAR,E.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(B,t.components,e,H,D,P,G,U)):this._addMeshVertexNonIndexed(t.components,e,H,D,P,G,U),d.finalize(),f&&f.finalize(),g&&g.finalize(),_&&_.finalize(),B&&B.finalize(),l&&l.finalize(),i||n.finalize();const et=this.gltf.meshes.length;return this.gltf.meshes.push(e),et}_flipYZAxis({position:t,normal:e,tangent:s}){this._flipYZBuffer(t,3),this._flipYZBuffer(e,3),this._flipYZBuffer(s,4)}_flipYZBuffer(t,e){if(t!=null)for(let s=1,i=2;s<t.length;s+=e,i+=e){const n=t[s],a=t[i];t[s]=a,t[i]=-n}}_addMaterial(t){if(t===null)return;const e=this._materialMap.indexOf(t);if(e!==-1)return e;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(t.alphaMode){case"mask":s.alphaMode=V.MASK;break;case"auto":case"blend":s.alphaMode=V.BLEND}t.alphaCutoff!==.5&&(s.alphaCutoff=t.alphaCutoff),t.doubleSided&&(s.doubleSided=t.doubleSided),s.pbrMetallicRoughness={};const i=o=>o**2.1,n=o=>{const h=o.toRgba();return h[0]=i(h[0]/255),h[1]=i(h[1]/255),h[2]=i(h[2]/255),h};if(t.color!=null&&(s.pbrMetallicRoughness.baseColorFactor=n(t.color)),t.colorTexture!=null&&(s.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(t.colorTexture,t.colorTextureTransform)),t.normalTexture!=null&&(s.normalTexture=this._createTextureInfo(t.normalTexture,t.normalTextureTransform)),t instanceof gt){if(t.emissiveTexture!=null&&(s.emissiveTexture=this._createTextureInfo(t.emissiveTexture,t.emissiveTextureTransform)),t.emissiveColor!=null){const o=n(t.emissiveColor);s.emissiveFactor=[o[0],o[1],o[2]]}t.occlusionTexture!=null&&(s.occlusionTexture=this._createTextureInfo(t.occlusionTexture,t.occlusionTextureTransform)),t.metallicRoughnessTexture!=null&&(s.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(t.metallicRoughnessTexture,t.metallicRoughnessTextureTransform)),s.pbrMetallicRoughness.metallicFactor=t.metallic,s.pbrMetallicRoughness.roughnessFactor=t.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,$.warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const a=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(t),a}_createTextureInfo(t,e){const s={index:this._addTexture(t)};return e&&(s.extensions||(s.extensions={}),s.extensions.KHR_texture_transform={scale:e.scale,offset:e.offset,rotation:at(e.rotation)}),s}_addTexture(t){const e=this.gltf.textures??[];return this.gltf.textures=e,ot(this._textureMap,t,()=>{const s={sampler:this._addSampler(t),source:this._addImage(t)},i=e.length;return e.push(s),i})}_addImage(t){const e=this._imageMap.get(t);if(e!=null)return e;this.gltf.images||(this.gltf.images=[]);const s={};if(t.url)s.uri=t.url;else{const n=t.data;s.extras=n;for(let o=0;o<this.gltf.images.length;++o)if(n===this.gltf.images[o].extras)return o;const a=this.gltf.extras;switch(a.options.imageOutputType){case b.GLB:{const o=a.binChunkBuffer.addBufferView(u.UNSIGNED_BYTE,w.SCALAR);if(v(n))n.data!=null&&o.writeOutToBuffer(n.data,0);else{const h=j(n).then(({data:p,type:m})=>(s.mimeType=m,p));o.writeAsync(h).then(()=>{o.finalize()})}s.bufferView=o.index;break}case b.DataURI:if(v(n)){$.warnOnce("Image export for basis compressed textures not available.");break}s.uri=Tt(n);break;default:if(v(n)){$.warnOnce("Image export for basis compressed textures not available.");break}a.promises.push(j(n).then(({data:o,type:h})=>{s.uri=o,s.mimeType=h}))}}const i=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(t,i),i}_addSampler(t){this.gltf.samplers||(this.gltf.samplers=[]);let e=A.REPEAT,s=A.REPEAT;if(typeof t.wrap=="string")switch(t.wrap){case"clamp":e=A.CLAMP_TO_EDGE,s=A.CLAMP_TO_EDGE;break;case"mirror":e=A.MIRRORED_REPEAT,s=A.MIRRORED_REPEAT}else{switch(t.wrap.vertical){case"clamp":s=A.CLAMP_TO_EDGE;break;case"mirror":s=A.MIRRORED_REPEAT}switch(t.wrap.horizontal){case"clamp":e=A.CLAMP_TO_EDGE;break;case"mirror":e=A.MIRRORED_REPEAT}}const i={wrapS:e,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(i)===JSON.stringify(this.gltf.samplers[a]))return a;const n=this.gltf.samplers.length;return this.gltf.samplers.push(i),n}_addAccessor(t,e){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:t,byteOffset:e.byteOffset,componentType:e.componentType,count:e.count,type:e.type,min:e.min,max:e.max,name:e.name};e.normalized&&(s.normalized=!0);const i=this.gltf.accessors.length;return this.gltf.accessors.push(s),i}_addMeshVertexIndexed(t,e,s,i,n,a,o,h){for(const p of e){t.startAccessor("INDICES");for(let f=0;f<p.faces.length;++f)t.push(p.faces[f]);const m=t.endAccessor(),d={attributes:{POSITION:i},indices:this._addAccessor(t.index,m),material:this._addMaterial(p.material)};n&&p.shading!=="flat"&&(d.attributes.NORMAL=n),a&&(d.attributes.TEXCOORD_0=a),o&&p.shading!=="flat"&&(d.attributes.TANGENT=o),h&&(d.attributes.COLOR_0=h),s.primitives.push(d)}}_addMeshVertexNonIndexed(t,e,s,i,n,a,o){const h={attributes:{POSITION:s}};i&&(h.attributes.NORMAL=i),n&&(h.attributes.TEXCOORD_0=n),a&&(h.attributes.TANGENT=a),o&&(h.attributes.COLOR_0=o),t&&(h.material=this._addMaterial(t[0].material)),e.primitives.push(h)}}let Mt=class{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(t){if(this._scenes.includes(t))throw new Error("Scene already added");this._scenes.push(t)}removeScene(t){ht(this._scenes,t)}forEachScene(t){this._scenes.forEach(t)}};class Bt{constructor(){this.name="",this._nodes=[]}addNode(t){if(this._nodes.includes(t))throw new Error("Node already added");this._nodes.push(t)}forEachNode(t){this._nodes.forEach(t)}}class Lt{constructor(t){this.mesh=t,this.name="",this.translation=S(),this.rotation=dt(),this.scale=C(q),this._nodes=[]}addNode(t){if(this._nodes.includes(t))throw new Error("Node already added");this._nodes.push(t)}forEachNode(t){this._nodes.forEach(t)}set rotationAngles(t){lt(this.rotation,t[0],t[1],t[2])}}const Ct="model.gltf",Q="model.glb";function zt(r,t,e){var d;const s=new St(r,t=t||{},e);let i=s.params;i?i.origin||(i.origin=new Y({x:-1,y:-1,z:-1})):i={origin:new Y({x:-1,y:-1,z:-1})};const n=i.origin,a=s.gltf,o=((d=a.extras)==null?void 0:d.promises)??[];let h=1,p=1,m=null;return k(o).then(()=>{const f={origin:n};delete a.extras;const g=typeof t.jsonSpacing=="number"?t.jsonSpacing:4,_=JSON.stringify(a,(l,y)=>{if(l!=="extras"){if(y instanceof ArrayBuffer){if(At(y))switch(t.imageOutputType){case b.DataURI:case b.GLB:break;case b.External:default:{const x=`img${p}.png`;return p++,f[x]=y,x}}switch(t.bufferOutputType){case R.DataURI:return bt(y);case R.GLB:if(m)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(m=y);case R.External:default:{const x=`data${h}.bin`;return h++,f[x]=y,x}}}return y}},g);return t.bufferOutputType===R.GLB||t.imageOutputType===b.GLB?f[Q]=new T(_,m).buffer:f[Ct]=_,f})}function Vt(r,t){return zt(r,{bufferOutputType:R.GLB,imageOutputType:b.GLB,jsonSpacing:0},t)}class Ft{constructor(t,e){this._file={type:"model/gltf-binary",data:t},this.origin=e}buffer(){return Promise.resolve(this._file)}download(t){ct(new Blob([this._file.data],{type:this._file.type}),t)}}function xe(r,t){const e=new Mt,s=new Bt;return e.addScene(s),s.addNode(new Lt(r)),Vt(e,t).then(i=>new Ft(i[Q],i.origin))}export{xe as toBinaryGLTF};
