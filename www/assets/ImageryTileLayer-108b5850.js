import{hL as dt,bv as Z,jd as st,s as De,a as O,g7 as Be,aI as A,aO as H,ac as rt,P as mt,ds as nt,fR as pt,t as I,v,cR as at,w as Q,aL as yt,A as Ne,a7 as gt,aP as He,a6 as q,bu as xt,Y as wt,j as ot,R as Me,N as It,fU as bt,ab as St,ag as Rt,cH as vt,cL as Tt,cJ as _t,cK as Ft,da as kt,d7 as Mt,d8 as Pt,cI as Ct,cM as Ot,cN as $t,dh as ce,eV as Dt,m as Bt,dg as Nt,aK as Jt,cQ as Et,C as zt,bh as At}from"./index-8b2f21d4.js";import{c as Ht,N as Pe,l as Lt,d as Wt,a as qt,h as Gt,Q as Le,E as We,L as jt,q as Ut,k as qe,t as Vt,m as Yt,b as Xt}from"./ImageHistogramParameters-9230a91c.js";import{h as lt,D as Kt,i as Qt,a as Zt,p as ct,d as Ge,o as ei,f as je,g as ti}from"./multidimensionalUtils-7531cd3d.js";import{j as ii,n as pe,m as si,L as ri,r as Ue,a as ye,h as ni,g as Je,P as ai,b as oi,v as li,U as ci,N as ui,R as hi,c as ge,B as fi,d as di,D as mi}from"./RasterSymbolizer-515d5bc0.js";import{i as Ve,m as Ye,x as Xe,h as pi,s as yi}from"./RawBlockCache-66c2f517.js";import{U as ve,R as ut,I as gi,a as xi,l as wi,c as Ii,u as ee,f as bi,s as Si,W as Ri,T as vi}from"./dataUtils-924a204f.js";import{k as Ce,K as xe,_ as Ke,i as Qe,n as Ti,Q as Te,q as be,$ as _i,V as Fi,C as ki,J as Mi}from"./rasterProjectionHelper-bf65c598.js";import{_ as Oe,f as Pi,i as Ci,y as Ee,n as Oi,h as $i}from"./utils-c9a1bb42.js";import{T as Di}from"./TilemapCache-5bf2c7d8.js";import"./normalizeUtils-2528a9ea.js";import"./normalizeUtilsCommon-197b6403.js";import"./utils-64e0d91e.js";import"./utils-403c7793.js";import"./utils-08e7b3c7.js";import"./rasterRendererChecks-e55c06d8.js";import"./generateRendererUtils-d7e21517.js";import"./colorUtils-c0f43caf.js";import"./ByteSizeUnit-d4757d40.js";const Ze=8,Bi=256;let L=class extends dt(yt){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const s=Ce();this.addResolvingPromise(s),await this.when()}normalizeCtorArgs(s){return s&&s.ioConfig&&(s={...s,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create(),...s.ioConfig}}),s}get _isGlobalWrappableSource(){const{rasterInfo:s}=this,e=xe(s.spatialReference);return e!=null&&s.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:s}=this.rasterInfo;return s==null||s.type==="gcs-shift"}set rasterJobHandler(s){var e,r;this._set("rasterJobHandler",s),this.datasetFormat==="Function"&&((r=(e=this.primaryRasters)==null?void 0:e.rasters)==null||r.forEach(t=>t.rasterJobHandler=s))}set url(s){this._set("url",st(s,De.getLogger(this)))}async open(s){throw new O("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(s,e,r,t={}){const i=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(s,e,r,i);return this.fetchPixels(n,i.size[0],i.size[1],t)}async identify(s,e={}){var M;s=Be(A,s).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:i}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=i;let{transposedVariableName:o}=e;const l=a!=null&&n&&(t!=null||lt(r));l&&!o&&(o=r!=null&&r.length>0?r[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:d}=i,{datumTransformation:u}=e;let m=Ke(s,c,u);if(!d.intersects(m))return{location:m,value:null};if(i.transform!=null){const P=i.transform.inverseTransform(m);if(!i.nativeExtent.intersects(P))return{location:P,value:null};m=P}let f=0;const p=o!=null&&a!=null&&i.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const P=this.primaryRasters.rasters[0];if(p)return P.identify(m,e);const{pixelSize:E}=i,$=3,C=E.x*$/2,D=E.y*$/2,N=new H({xmin:m.x-C,xmax:m.x+C,ymin:m.y-D,ymax:m.y+D,spatialReference:c}),V={interpolation:"nearest"},{pixelBlock:z}=await P.fetchPixels(N,$,$,V),{pixelBlock:B}=await this.fetchPixels(N,$,$,V);if(z==null)return{location:m,value:null};const j=Math.floor($*$*.5),oe=!z.mask||z.mask[j]?z.pixels.map(G=>G[j]):null;let Y;return B!=null&&(Y=!B.mask||B.mask[j]?B.pixels.map(G=>G[j]):void 0),{location:m,value:oe,processedValue:Y,pyramidLevel:0}}if(!p){if(e.srcResolution)f=Qe(e.srcResolution,i,this.ioConfig.sampling).pyramidLevel;else if(f=await this.computeBestPyramidLevelForLocation(s,e),f==null)return{location:m,value:null}}const y=this.identifyPixelLocation(m,f,null,p);if(y===null)return{location:m,value:null};const{row:h,col:g,rowOffset:x,colOffset:w,blockWidth:b}=y,T=o??e.sliceId,R=Ve(this.url,T),F=`${f}/${h}/${g}`;let _=Ye(R,null,F);_==null&&(_=this.fetchRawTile(f,h,g,e),Xe(R,null,F,_));const k=await _;if(k==null||!((M=k.pixels)!=null&&M.length))return{location:m,value:null};const S=x*b+w;return this._processIdentifyResult(k,{srcLocation:m,position:S,pyramidLevel:f,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(s,e,r,t={}){s=Ti(s),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:i}=this;if(t.requestRawData&&i)return this._fetchPixels(s,e,r,t);const n=xe(s.spatialReference),a=Te(s);if(n==null||a===0||a===1&&this._isGlobalWrappableSource&&i)return this._fetchPixels(s,e,r,t);if(a>=3)return{extent:s,pixelBlock:null};const o=[],{xmin:l,xmax:c}=s,d=Math.round(n/(c-l)*e),u=d-Math.round((n/2-l)/(c-l)*e);let m=0;const f=[];for(let g=0;g<=a;g++){const x=new H({xmin:g===0?l:-n/2,xmax:g===a?c-n*g:n/2,ymin:s.ymin,ymax:s.ymax,spatialReference:s.spatialReference}),w=g===0?d-u:g===a?e-m:d;m+=w,f.push(w);const b=t.disableWrapAround&&g>0?null:this._fetchPixels(x,w,r,t);o.push(b)}const p=(await Promise.all(o)).map(g=>g==null?void 0:g.pixelBlock);let y=null;const h={width:e,height:r};return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:h,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},t)).pixelBlock:y=ve(p,h,{blockWidths:f}),{extent:s,srcExtent:be(s,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:y}}async fetchRawPixels(s,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const i=await this._fetchRawTiles(s,e,r,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**s,c=a.x*l,d=a.y*l,u=new H({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-d*(e.y+r.height-1),ymax:n.ymax-d*e.y,spatialReference:n.spatialReference});if(!i)return{extent:u,srcExtent:u,pixelBlock:null};const{pixelBlocks:m,mosaicSize:f}=i;if(m.length===1&&m[0]!=null&&m[0].width===r.width&&m[0].height===r.height)return{extent:u,srcExtent:u,pixelBlock:i.pixelBlocks[0]};const p=s>0?o.pyramidBlockWidth:o.blockWidth,y=s>0?o.pyramidBlockHeight:o.blockHeight,h={x:e.x%p,y:e.y%y};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:f,destDimension:r,clipOffset:h,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:g=ve(m,f,{clipOffset:h,clipSize:r}),{extent:u,srcExtent:u,pixelBlock:g}}fetchRawTile(s,e,r,t){throw new O("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(s){return be(this.rasterInfo.extent,s)}decodePixelBlock(s,e){return!this.rasterJobHandler||e.useCanvas?ii(s,e):this.rasterJobHandler.decode({data:s,options:e})}async request(s,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:i,query:n,headers:a}=e;r=r??e.retryCount??this.ioConfig.retryCount;const o=i?{Range:`bytes=${i.from}-${i.to}`}:null;try{return await rt(s,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(r>0)return r--,this.request(s,e,r);throw l}}getSliceIndex(s){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||s==null||s.length===0?null:Kt(s,e)}getTileExtentFromTileInfo(s,e,r,t){const i=mt(t.lodAt(s));return this.getTileExtent({x:i.resolution,y:i.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:s,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo;if(!s.tileInfo){const i=[],n=s.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)i.push(new nt({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new A({x:r.xmin,y:r.ymax,spatialReference:e});s.tileInfo=new Z({origin:l,size:[s.blockWidth,s.blockHeight],spatialReference:e,lods:i}),s.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(s,e=512,r=512,t){const{width:i,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=s,c=new A({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const d=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);s.storageInfo=new pe({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:d})}async computeBestPyramidLevelForLocation(s,e={}){return 0}computeBlockBoundary(s,e,r,t,i,n=0,a=2){if(i.length===1&&n>0){i=[...i];let{x:d,y:u}=i[0];for(let m=0;m<n;m++)d*=a,u*=a,i.push({x:d,y:u})}const o=[],{x:l,y:c}=t;for(let d=0;d<i.length;d++){const{x:u,y:m}=i[d];o.push({minCol:Math.floor((s.xmin-l+.1*u)/e/u),maxCol:Math.floor((s.xmax-l-.1*u)/e/u),minRow:Math.floor((c-s.ymax+.1*m)/r/m),maxRow:Math.floor((c-s.ymin-.1*m)/r/m)})}return o}getPyramidPixelSize(s){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(s===0)return e;if(r!=null&&r.length)return r[s-1];const i=t**s;return{x:e.x*i,y:e.y*i}}identifyPixelLocation(s,e,r,t){const{spatialReference:i,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,d=t&&c!=null?c.tileSize[0]:a.blockWidth,u=t&&c!=null?c.tileSize[1]:a.blockHeight,m=Ke(s,i,r);if(!n.intersects(m)||e<0||e>o)return null;const f=this.getPyramidPixelSize(e),{x:p,y}=f,h=(l.y-m.y)/y/u,g=(m.x-l.x)/p/d,x=Math.min(u-1,Math.floor((h-Math.floor(h))*u)),w=Math.min(d-1,Math.floor((g-Math.floor(g))*d));return{pyramidLevel:e,row:Math.floor(h),col:Math.floor(g),rowOffset:x,colOffset:w,blockWidth:d,srcLocation:m}}getTileExtent(s,e,r,t,i,n){const[a,o]=n,l=t.x+r*a*s.x,c=l+a*s.x,d=t.y-e*o*s.y,u=d-o*s.y;return new H({xmin:l,xmax:c,ymin:u,ymax:d,spatialReference:i})}getBlockWidthHeight(s){return{blockWidth:s>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:s>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(s,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[s];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}async _fetchPixels(s,e,r,t={}){let i=Te(s);if(i>=2)return{extent:s,pixelBlock:null};const n=this._getSourceDataInfo(s,e,r,t),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:d,ul:u}=n;if(c===0||d===0)return{extent:s,srcExtent:l,pixelBlock:null};const{rasterInfo:m}=this,f=m.transform,p=(f==null?void 0:f.type)==="gcs-shift",y=xe(s.spatialReference)!=null;!p&&y||(i=Te(n.srcExtent,p));const h=await this._fetchRawTiles(a,u,{width:c,height:d,wrapCount:i},t);if(!h)return{extent:s,srcExtent:l,pixelBlock:null};const g=m.storageInfo,x=a>0?g.pyramidBlockWidth:g.blockWidth,w=a>0?g.pyramidBlockHeight:g.blockHeight;let{x:b,y:T}=m.pixelSize;if(a>0){const{pyramidResolutions:G,pyramidScalingFactor:ft}=g;if(G!=null&&G[a-1])({x:b,y:T}=G[a-1]);else{const Ae=ft**a;b*=Ae,T*=Ae}}const R=m.spatialReference,F=new A({x:b,y:T,spatialReference:R}),_=x===c&&w===d&&u.x%x==0&&u.y%w==0,k=new A({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference}),S=!s.spatialReference.equals(R),M=R.isGeographic?1e-9:1e-4,{datumTransformation:P}=t;if(!S&&_&&h.pixelBlocks.length===1&&x===e&&w===r&&this._isSameResolution(o,k,M))return{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:h.pixelBlocks[0]};const E=y&&xe(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,$=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");$&&!this.rasterJobHandler&&await Ce();const C=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:h.extent,pixelSize:k.toJSON(),datumTransformation:P,rasterTransform:f,hasWrapAround:i>0||E,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:$},t):_i({projectedExtent:s,srcBufferExtent:h.extent,pixelSize:k,datumTransformation:P,rasterTransform:f,hasWrapAround:i>0||E,isAdaptive:!1,includeGCSGrid:$});let D;const N=!t.requestRawData,V={rows:C.spacing[0],cols:C.spacing[1]},z=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,h.extent.xmin):void 0,{pixelBlocks:B,mosaicSize:j,isPartiallyFilled:oe}=h;let Y=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:Y}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:B,srcMosaicSize:j,destDimension:N?{width:e,height:r}:null,coefs:N?C.coefficients:null,sampleSpacing:N?V:null,projectDirections:$,gcsGrid:$?C.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:z,blockWidths:null},t));else{const G=ve(B,j,{alignmentInfo:z});D=N?ut(G,{width:e,height:r},C.coefficients,V,t.interpolation):G,$&&C.gcsGrid&&(Y=gi({width:e,height:r},C.gcsGrid),D=xi(D,this.rasterInfo.dataType,Y))}return t.requestRawData||$?{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:D,transformGrid:C,localNorthDirections:Y,isPartiallyFilled:oe}:{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:D}}async _fetchRawTiles(s,e,r,t){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(s);let{x:l,y:c}=e,{width:d,height:u,wrapCount:m}=r;const f=this._getRasterTileAlignmentInfo(s,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,d+=2*t.buffer.cols,u+=2*t.buffer.rows);let p=0,y=0,h=0;m&&f!=null&&({worldColumnCountFromOrigin:y,originColumnOffset:h,rightPadding:p}=f,y*f.blockWidth-p>=l+d&&(p=0));const g=Math.floor(l/a),x=Math.floor(c/o),w=Math.floor((l+d+p-1)/a),b=Math.floor((c+u+p-1)/o),T=n[s];if(!T)return null;const{minRow:R,minCol:F,maxCol:_,maxRow:k}=T;if(m===0&&(b<R||w<F||x>k||g>_))return null;const S=new Array;let M=!1;const P=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=x;z<=b;z++)for(let B=g;B<=w;B++){let j=B;if(!t.disableWrapAround&&m&&f!=null&&y<=B&&(j=B-y-h),z>=R&&j>=F&&k>=z&&_>=j){const oe=this._fetchRawTile(s,z,j,t);P?S.push(new Promise(Y=>{oe.then(G=>Y(G)).catch(()=>{M=!0,Y(null)})})):S.push(oe)}else S.push(Promise.resolve(null))}if(S.length===0)return null;const E=await Promise.all(S),$={height:(b-x+1)*o,width:(w-g+1)*a},{spatialReference:C}=this.rasterInfo,D=this.getPyramidPixelSize(s),{x:N,y:V}=D;return{extent:new H({xmin:i.x+g*a*N,xmax:i.x+(w+1)*a*N,ymin:i.y-(b+1)*o*V,ymax:i.y-x*o*V,spatialReference:C}),pixelBlocks:E,mosaicSize:$,isPartiallyFilled:M}}_isSameResolution(s,e,r){return Math.abs(s.x-e.x)<r&&Math.abs(s.y-e.y)<r}_fetchRawTile(s,e,r,t){const i=this.rasterInfo.storageInfo.blockBoundary[s];if(!i)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=i;if(e<n||r<a||e>l||r>o)return Promise.resolve(null);const c=Ve(this.url,t.sliceId),d=`${s}/${e}/${r}`;let u=Ye(c,t.registryId,d);if(u==null){const m=new AbortController;u=this.fetchRawTile(s,e,r,{...t,signal:m.signal}),Xe(c,t.registryId,d,u,m),u.catch(()=>pi(c,t.registryId,d))}return t.signal&&pt(t,()=>{yi(c,t.registryId,d)}),u}_computeMagDirValues(s){var l;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(s==null?void 0:s.length)!==2||!((l=s[0])!=null&&l.length))return null;const t=s[0].length;if(r==="vector-magdir"){const c=s[1].map(d=>(d+360)%360);return[s[0],c]}const[i,n]=s,a=[],o=[];for(let c=0;c<t;c++){const[d,u]=wi([i[c],n[c]]);a.push(d),o.push(u)}return[a,o]}_getRasterTileAlignmentInfo(s,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Fi(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[s]}}_getSourceDataInfo(s,e,r,t={}){const i={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(i.srcResolution=t.srcResolution,this._updateSourceDataInfo(s,i));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=i,c=a/e,d=o/r,u=l<n&&c*d>=16,m=l===n&&this._requireTooManySrcTiles(a,o,e,r);if(u||m||a===0||o===0){const f=new A({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference});let p=ki(f,this.rasterInfo.spatialReference,s,i.datumTransformation);const y=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(u&&t.srcResolution&&y){const h=Math.round(Math.log(Math.max(c,d))/Math.LN2)-1;if(n-l+3>=h){const g=2**h;p={x:t.srcResolution.x*g,y:t.srcResolution.y*g}}}p&&(i.srcResolution=p,this._updateSourceDataInfo(s,i))}return this._requireTooManySrcTiles(i.srcWidth,i.srcHeight,e,r)&&(i.srcWidth=0,i.srcHeight=0),i}_requireTooManySrcTiles(s,e,r,t){const{tileInfo:i}=this.rasterInfo.storageInfo;return Math.ceil(s/i.size[0])*Math.ceil(e/i.size[1])>=Bi||s/r>Ze||e/t>Ze}_updateSourceDataInfo(s,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,t=r.spatialReference,{srcResolution:i,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=Qe(i,r,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||be(s,t,n);if(c==null)return;const d=r.transform;d&&(c=d.inverseTransform(c)),e.srcExtent=c;const{x:u,y:m}=r.storageInfo.origin,f=Math.floor((c.xmin-u)/o.x+.1),p=Math.floor((m-c.ymax)/o.y+.1),y=Math.floor((c.xmax-u)/o.x-.1),h=Math.floor((m-c.ymin)/o.y-.1),g=c.width<.1*o.x?0:y-f+1,x=c.height<.1*o.y?0:h-p+1;e.pyramidLevel=a,e.pyramidResolution=o,e.srcWidth=g,e.srcHeight=x,e.ul={x:f,y:p}}_getRequestOptionsWithSliceId(s){return this.rasterInfo.multidimensionalInfo!=null&&s.sliceId==null&&(s={...s,sliceId:this.getSliceIndex(s.multidimensionalDefinition)}),s}_processIdentifyResult(s,e){const{srcLocation:r,position:t,pyramidLevel:i,useTransposedTile:n}=e,a=s.pixels[0].length/s.width/s.height;if(!(!s.mask||s.mask[t]))return{location:r,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!n){const h=s.pixels.map(w=>w[t]),g={location:r,value:h,pyramidLevel:i},x=this._computeMagDirValues(h.map(w=>[w]));return x!=null&&x.length&&(g.magdirValue=x.map(w=>w[0])),g}let l=s.pixels.map(h=>h.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:d,identifyOptions:u}=e;let m=Qt(o,u.transposedVariableName);if(d){const h=Zt(m,u.multidimensionalDefinition,u.timeExtent);l=l.map(g=>h.map(x=>g[x])),c=c==null?void 0:c.map(g=>h.map(x=>g[x])),m=h.map(g=>m[g])}const f=s.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:s.pixelType};let y;return f!=null&&(Ii(p,f),y=p.mask),{location:r,value:null,dataSeries:m.map((h,g)=>{const x={value:(y==null?void 0:y[g])===0?null:l.map(w=>w[g]),multidimensionalDefinition:h.multidimensionalDefinition.map(w=>new ct({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][g],c[1][g]]),x}),pyramidLevel:i}}};I([v()],L.prototype,"_rasterTileAlighmentInfo",void 0),I([v({readOnly:!0})],L.prototype,"_isGlobalWrappableSource",null),I([v({readOnly:!0})],L.prototype,"_hasNoneOrGCSShiftTransform",null),I([v()],L.prototype,"rasterJobHandler",null),I([v(at)],L.prototype,"url",null),I([v({type:String,json:{write:!0}})],L.prototype,"datasetName",void 0),I([v({type:String,json:{write:!0}})],L.prototype,"datasetFormat",void 0),I([v()],L.prototype,"hasUniqueSourceStorageInfo",void 0),I([v()],L.prototype,"rasterInfo",void 0),I([v()],L.prototype,"ioConfig",void 0),I([v()],L.prototype,"sourceJSON",void 0),L=I([Q("esri.layers.support.rasterDatasets.BaseRaster")],L);const ae=L;let ie=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){var d,u,m,f;await this.init();const{rasterFunction:r}=this;(u=(d=this.primaryRasters)==null?void 0:d.rasters)!=null&&u.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&((m=this.primaryRasters.rasters)==null||m.forEach(p=>p.rasterJobHandler=this.rasterJobHandler)));const{rasters:t,rasterIds:i}=this.primaryRasters,n=t.map(p=>p.rasterInfo?void 0:p.open(e));await Promise.all(n);const a=t.map(({rasterInfo:p})=>p),o=r.bind({rasterInfos:a,rasterIds:i});if(!o.success||a.length===0)throw new O("raster-function:open",`cannot bind the function: ${o.error??""}`);const l=r.functionName==="Table"?r:(f=r.functionArguments)==null?void 0:f.raster;(l==null?void 0:l.functionName)==="Table"&&(r.rasterInfo.attributeTable=Ne.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(p=>this._hasSameStorageInfo(p,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",r.rasterInfo)}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,r,t,i={}){var w,b;const{rasters:n,rasterIds:a}=this.primaryRasters;let o=!1;const{interpolation:l}=i,c=(w=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:w.hasSurfaceFunction;!i.requestRawData&&l!=="bilinear"&&c&&(o=n.length===1&&!i.skipRasterFunction,i={...i,interpolation:"bilinear",requestRawData:o});const d=n.map(T=>T.fetchPixels(e,r,t,i)),u=await Promise.all(d),m=u.map(T=>T.pixelBlock),f=o||i.requestRawData?u.map(T=>T.srcTilePixelSize):null;if(i.skipRasterFunction||m.every(T=>T==null))return u[0];const p=((b=u.find(T=>T.pixelBlock!=null))==null?void 0:b.extent)??e,y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:f,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:f,primaryRasterIds:a}),{transformGrid:h}=u[0];if(!o||y==null||h==null)return{...u[0],pixelBlock:y};const g={rows:h.spacing[0],cols:h.spacing[1]};let x;return this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:r,height:t},coefs:h.coefficients,sampleSpacing:g,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},i)).pixelBlock:x=ut(y,{width:r,height:t},h.coefficients,g,l),{extent:e,srcExtent:u[0].srcExtent,pixelBlock:x}}_hasSameStorageInfo(e,r){const{storageInfo:t,pixelSize:i,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:d}=r;return i.x===l.x&&i.y===l.y&&n.equals(c)&&a.equals(d)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};I([v({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),I([v()],ie.prototype,"tileType",void 0),I([v()],ie.prototype,"rasterFunction",void 0),I([v()],ie.prototype,"primaryRasters",void 0),ie=I([Q("esri.layers.support.rasterDatasets.FunctionRaster")],ie);const $e=ie;function Ni(s,e){if(s.spatialReference.equals(e))return s;const r=He(s.spatialReference),t=He(e);if(r===t)return s;const i=r/t;return{x:s.x*i,y:s.y*i}}async function Ji(s,e,r){if(r.type==="extent")return zi(s,e,r);const{width:t,height:i}=s,n=new Uint8Array(t*i),{contains:a,intersects:o}=await gt(()=>import("./geometryEngine-df3bc2de.js"),["assets/geometryEngine-df3bc2de.js","assets/geometryEngineBase-24032ee9.js","assets/index-8b2f21d4.js","assets/index-871df92e.css","assets/hydrated-41097b06.js"]);return o(e,r)?r.type==="polyline"?Ai(s,e,r):a(r,e)?s:Ei(s,e,r):new ee({pixelType:s.pixelType,width:t,height:i,mask:n,maskIsAlpha:!1,pixels:[...s.pixels]})}function Ei(s,e,r){if(!s)return s;const{width:t,height:i}=s,n=e.width/t,a=e.height/i,{xmin:o,ymax:l}=e;let c;if(r.type==="extent"){const h=(r.xmin-o)/n,g=(r.xmax-o)/n,x=(l-r.ymax)/a,w=(l-r.ymin)/a;c=[[[h,x],[h,w],[g,w],[g,x],[h,x]]]}else c=r.rings.map(h=>h.map(([g,x])=>[(g-o)/n,(l-x)/a]));const d=document.createElement("canvas");d.width=t,d.height=i;const u=d.getContext("2d");u.fillStyle="#f00",c.forEach(h=>{u.beginPath(),u.moveTo(h[0][0],h[0][1]);for(let g=0;g<h.length;g++)u.lineTo(h[g][0],h[g][1]);u.closePath(),u.fill()});const m=u.getImageData(0,0,t,i).data,f=s.mask,p=t*i,y=new Uint8Array(p);for(let h=0;h<p;h++)f&&!f[h]||(y[h]=m[4*h+3]>127?255:0);return new ee({pixelType:s.pixelType,width:t,height:i,mask:y,maskIsAlpha:!1,pixels:[...s.pixels]})}function zi(s,e,r){const{width:t,height:i}=s,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i;if(r.width/a<.5||r.height/o<.5)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});const{xmin:l,xmax:c,ymin:d,ymax:u}=e,{xmin:m,xmax:f,ymin:p,ymax:y}=r,h=Math.max(l,m),g=Math.min(c,f),x=Math.max(d,p),w=Math.min(u,y),b=.5*a,T=.5*o;if(g-h<b||w-x<T||g<l+b||h>c-b||x>u-T||w<d+T)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});const R=Math.max(0,(h-l)/a),F=Math.min(t,Math.max(0,(g-l)/a)),_=Math.max(0,(u-w)/o),k=Math.min(i,Math.max(0,(u-x)/o)),S=Math.round(R),M=Math.round(F)-1,P=Math.round(_),E=Math.round(k)-1;if(S===M&&R%1>.5&&F%1<.5||P===E&&_%1>.5&&k%1<.5)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});if(S===0&&P===0&&M===t&&E===i)return s;const $=s.mask;for(let C=P;C<=E;C++)for(let D=S;D<=M;D++){const N=C*t+D;n[N]=$?$[N]:255}return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]})}function Ai(s,e,r){const{width:t,height:i}=s,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i,{xmin:l,ymax:c}=e,{paths:d}=r,u=s.mask;for(let m=0;m<d.length;m++){const f=d[m];for(let p=0;p<f.length-1;p++){const[y,h]=f[p],[g,x]=f[p+1];let w=Math.floor((c-h)/o),b=Math.floor((c-x)/o);if(b<w){const R=w;w=b,b=R}w=Math.max(0,w),b=Math.min(i-1,b);const T=(g-y)/(x-h);for(let R=w;R<=b;R++){const F=R===w?Math.max(h,x):(i+1-R)*o,_=R===b?Math.min(h,x):F-o;let k=Math.floor(x===h?(y-l)/a:(T*(F-h)+y-l)/a),S=Math.floor(x===h?(g-l)/a:(T*(_-h)+y-l)/a);if(S<k){const P=k;k=S,S=P}const M=R*t;k=Math.max(0,k),S=Math.min(t-1,S);for(let P=M+k;P<=M+S;P++)n[P]=u?u[P]:255}}}return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]})}function Hi(s,e,r,t=!0){const{spatialReference:i}=s,{x:n,y:a}=Ni(r,i);let o,l,c;const d=e.type==="extent"?e:e.extent;let{xmin:u,xmax:m,ymax:f,ymin:p}=d;const{xmin:y,ymax:h}=s.extent;return t?(u=y+(u>y?n*Math.round((u-y)/n):0),f=h-(f<h?a*Math.round((h-f)/a):0),m=y+(m>y?n*Math.round((m-y)/n):0),p=h-(p<h?a*Math.round((h-p)/a):0),o=new H({xmin:u,ymax:f,xmax:m,ymin:p,spatialReference:i}),l=Math.round(o.width/n),c=Math.round(o.height/a)):(l=Math.floor((m-u)/n+.8),c=Math.floor((f-p)/a+.8),u=y+(u>y?n*Math.floor((u-y)/n+.1):0),f=h-(f<h?a*Math.floor((h-f)/a+.1):0),m=u+l*n,p=f-c*a,o=new H({xmin:u,ymax:f,xmax:m,ymin:p,spatialReference:i})),{extent:o,width:l,height:c}}const et=De.getLogger("esri.layers.mixins.ImageryTileMixin"),Li=s=>{let e=class extends s{constructor(...t){var i,n;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(i=t[0])==null?void 0:i.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.rasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){var i;((i=t==null?void 0:t.functionName)==null?void 0:i.toLowerCase())==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",st(t,et))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,i,n){var o,l;const a=(l=(o=i==null?void 0:i.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:l.renderer;return qt(a,n)||void 0}async convertVectorFieldData(t,i){if(t==null||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},i):bi(t,a)}async computeStatisticsHistograms(t,i){t=Be(Gt,t).clone();const{rasterInfo:n}=this,{geometry:a}=t;if(a==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=a;const{spatialReference:l}=n;a.spatialReference.equals(l)||(await Ce(),o=a.type==="extent"?be(a,l):Mi(a,l));const c=t.pixelSize??new A({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:l}),{extent:d,width:u,height:m}=Hi(n,o,c),f=await this.fetchPixels(d,u,m,{...i,interpolation:"nearest"});if(f.pixelBlock==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await Ji(f.pixelBlock,d,o),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:p},i):si(p)}async createFlowMesh(t,i){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,i):Si(t.meshType,t.simulationSettings,t.flowData,i.signal!=null?i.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var o,l;const{multidimensionalInfo:i}=this.rasterInfo??{};if(i==null)return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;n!=null&&n.length||(n=Ge(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(g=>g.clone());const c=(l=(o=i.variables.find(({name:g})=>g===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:g})=>g==="StdTime"),d=n.find(({dimensionName:g})=>g==="StdTime");if(!c||!d)return{...t,multidimensionalDefinition:null};const{start:u,end:m}=a,f=u==null?null:u.getTime(),p=m==null?null:m.getTime(),y=f??p,h=p??f;if(c.values!=null){const g=c.values.filter(x=>{if(Array.isArray(x)){if(y===h)return x[0]<=y&&x[1]>=y;const w=x[0]<=y&&x[1]>y||x[0]<h&&x[1]>=h,b=x[0]>=y&&x[1]<=h||x[0]<y&&x[1]>h;return w||b}return y===h?x===y:x>=y&&x<=h});if(g.length){const x=g.sort((w,b)=>{const T=Array.isArray(w)?w[0]:w,R=Array.isArray(w)?w[1]:w,F=Array.isArray(b)?b[0]:b,_=Array.isArray(b)?b[1]:b;return y===h?T-F:Math.abs(R-h)-Math.abs(_-h)})[0];d.values=[x]}else n=null}else if(c.hasRegularIntervals&&c.extent){const[g,x]=c.extent;y>x||h<g?n=null:d.values=y===h?[y]:[Math.max(g,y),Math.min(x,h)]}}return n!=null&&ei(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){var d,u,m;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",Pe.fromJSON(f)),void(this._cachedRasterFunctionJson=(d=this.rasterFunction)==null?void 0:d.toJSON())}let t,i=this.raster,n=!1;i.datasetFormat==="Function"?(t=i.primaryRasters.rasters,i=t[0],n=!0):t=[i];const{rasterFunction:a}=this;if(a){const f={raster:i};t.length>1&&t.forEach(h=>f[h.url]=h);const p=Oe(((u=a.functionDefinition)==null?void 0:u.toJSON())??a.toJSON(),f),y=new $e({rasterFunction:p});y.rasterJobHandler=this._rasterJobHandler.instance,await y.open(),this._cachedRasterFunctionJson=(m=this.rasterFunction)==null?void 0:m.toJSON(),this.raster=y}else this.raster=i,this._cachedRasterFunctionJson=null,await i.when();if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(f=>f>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:i}=this;if(!t||!i||!this.renderer)return;const{rasterInfo:n}=this.raster,a=je(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=a==null?void 0:a.name,l=Le({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(i.rasterInfo=We(n,o),i.rendererJSON=l,i.bind(),await c.updateSymbolizer(i),this._cachedRendererJson=l)}async applyRenderer(t,i){const n=t&&t.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:i,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:i,bandIds:l}),a}getTileUrl(t,i,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${i}/${n}`:""}getCompatibleTileInfo(t,i,n=!1){if(!this.loaded||i==null)return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=wt(t);return Z.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:i.xmin,y:i.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,i,n,a={}){var l;if(r(this),a.requestAsImageElement){const c=this.getTileUrl(t,i,n);return rt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(d=>d.data)}const{rasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const c=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,i,n,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((l=this.renderer)==null?void 0:l.type)==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,i,n,a)}async fetchPixels(t,i,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),i=Math.round(i),n=Math.round(n),this.raster.fetchPixels(t,i,n,a))}async identify(t,i={}){var l;const{raster:n,rasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(lt(i.multidimensionalDefinition)||i.transposedVariableName||i.timeExtent))&&(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition==null)return{location:t,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(t))throw new O("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,i)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,o,l;const t=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if(t==null||((o=this.rasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const i=this.multidimensionalDefinition,n=(l=i==null?void 0:i[0])==null?void 0:l.variableName;return t.variables.some(c=>c.name===n&&(!(i!=null&&i[0].dimensionName)||c.dimensions.some(d=>d.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var n;const i=t??((n=this.rasterInfo)==null?void 0:n.multidimensionalInfo);return ti(this.multidimensionalSubset,i)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ge(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Vt;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){r(this);const{raster:i}=this,n=jt(i.rasterInfo,i.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){var d,u;r(this);const{rasterInfo:i}=this.raster;!this.bandIds&&i.bandCount>1&&(this.bandIds=Ut(i));const n=je(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n==null?void 0:n.name;if(!this.renderer||t==="override"){const m=qe(i,{bandIds:this.bandIds,variableName:a}),f=i.statistics,p=f&&f.length>0?f[0]:null,y=(p==null?void 0:p.max)??0,h=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&m.type==="raster-stretch"&&(y>1e24||h<-1e24)&&(m.dynamicRangeAdjustment=!0,m.statistics=null,m.stretchType==="none"&&(m.stretchType="min-max")),this.renderer=m}const o=Le({...this.renderer.toJSON(),variableName:a}),l=We(i,a);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new ri({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:m}=this.raster.rasterInfo,f=this.renderer;if(m!=null&&f.type==="raster-colormap"){const p=qe(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){const p=(d=this.bandIds)==null?void 0:d.length,y=(u=f.statistics)==null?void 0:u.length;!f.dynamicRangeAdjustment&&y&&p&&y!==p&&this._configDefaultRenderer("override")}}}else et.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.rasterInfo)throw new O("imagery-tile","no raster")}return I([v()],e.prototype,"_cachedRendererJson",void 0),I([v()],e.prototype,"_cachedRasterFunctionJson",void 0),I([v()],e.prototype,"_compatibleFullExtent",void 0),I([v()],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([v()],e.prototype,"_rasterJobHandler",void 0),I([v()],e.prototype,"bandIds",void 0),I([v({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([v({json:{read:!1}})],e.prototype,"fullExtent",null),I([v()],e.prototype,"interpolation",void 0),I([v()],e.prototype,"ioConfig",void 0),I([v({type:[ct],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([v({type:Ht,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([v()],e.prototype,"raster",void 0),I([v({type:Pe,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([v()],e.prototype,"rasterInfo",void 0),I([v()],e.prototype,"sourceJSON",void 0),I([v({readOnly:!0,type:q,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([v({type:Z})],e.prototype,"tileInfo",void 0),I([v(at)],e.prototype,"url",null),I([v({types:Lt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var i;const t=((i=this.renderer)==null?void 0:i.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Wt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([xt("renderer")],e.prototype,"readRenderer",null),I([v()],e.prototype,"symbolizer",void 0),e=I([Q("esri.layers.ImageryTileMixin")],e),e};function Wi(s){const e=s.fields,r=s.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",i=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=i.map(c=>c.name),a=[];let o=0,l=0;return r.forEach(c=>{const d={};for(d[t]=o++,l=1;l<n.length;l++)d[n[l]]=c[l-1];a.push({attributes:d})}),{displayFieldName:"",fields:i,features:a}}class ht{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const i=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),o={version:t,recordCount:i,headerByteCount:n,recordByteCount:a};let l=32;const c=[],d=[];let u;if(t===3){for(;r.getUint8(l)!==13;)u=String.fromCharCode(r.getUint8(l+11)).trim(),c.push({name:Ue(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:r.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;d.length<i&&e.byteLength-l>a;){const m=[];r.getUint8(l)===32?(l+=1,c.forEach(f=>{if(f.type==="C")m.push(Ue(new Uint8Array(e,l,f.length)).trim());else if(f.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim(),10));else if(f.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim()));else if(f.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim();m.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=f.length}),d.push(m)):l+=a}}return{header:o,fields:c,records:d,recordSet:Wi({fields:c,records:d})}}}const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const tt=8;let fe=class extends ae{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(r))throw new O("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:i}=this._parseHeader(r);if(i.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();i.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,r,t,i={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,r,t,i.multidimensionalDefinition,a),d=this._getIndexRecordFromBundle(r,t,o),u=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!u)return null;const m=new Uint8Array(u.data),f=this._getTileEndAndContentType(m,d);if(f.recordSize===0)return null;const p=await this.request(c,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:i.signal});if(!p)return null;const[y,h]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:y,height:h,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const r=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!r.some(t=>!e[t])}_parseHeader(e){var z;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:i,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,d=e.statistics&&e.statistics.map(B=>({min:B.min,max:B.max,avg:B.mean,stddev:B.standardDeviation,median:B.median,mode:B.mode})),u=e.extent.spatialReference,m=(z=e.geodataXform)==null?void 0:z.spatialReference,f=new q(u!=null&&u.wkid||u!=null&&u.wkt?u:m);let p=new H({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:f});const y=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:f}),h=Math.round((p.xmax-p.xmin)/y.x),g=Math.round((p.ymax-p.ymin)/y.y),x=this._parseTransform(e.geodataXform),w=x?p:null;x&&(p=x.forwardTransform(p),y.x=(p.xmax-p.xmin)/h,y.y=(p.ymax-p.ymin)/g);const b=e.properties??{},T=e.format.toLowerCase().replace("cache/",""),R=new A(e.origin.x,e.origin.y,f);let F,_,k,S;if(n&&n.colors)for(F=[],_=0;_<n.colors.length;_++)k=n.colors[_],S=n.values?n.values[_]:_,F.push([S,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);const M=e.LODInfos,P=[];for(_=0;_<M.levels.length;_++)P.push(new nt({level:M.levels[_],resolution:M.resolutions[_],scale:96/.0254*M.resolutions[_]}));const E=new Z({dpi:96,lods:P,format:T,origin:R,size:[a,o],spatialReference:f}),$={recordSize:tt,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*tt+64},C=[{maxCol:Math.ceil(h/a)-1,maxRow:Math.ceil(g/o)-1,minCol:0,minRow:0}];let D=2;if(c>0)for(_=0;_<c;_++)C.push({maxCol:Math.ceil(h/D/a)-1,maxRow:Math.ceil(g/D/o)-1,minCol:0,minRow:0}),D*=2;const N=e.mdInfo;let V=null;if(N&&b._yxs){const B=b._yxs;V={packetSize:B.PacketSize,tileSize:[B.TileXSize,B.TileYSize]}}return{storageInfo:$,rasterInfo:new ye({width:h,height:g,pixelType:r,bandCount:t,extent:p,nativeExtent:w,transform:x,spatialReference:f,pixelSize:y,keyProperties:b,statistics:d,histograms:i,multidimensionalInfo:N,colormap:F,storageInfo:new pe({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:R,tileInfo:E,transposeInfo:V,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:C})})}}_parseTransform(e){var t,i;if(!Pi(e))throw new O("cloudraster:open","the data contains unsupported geodata transform types");const r=Ci(e);if(r.type==="identity")return null;if(r.type!=="polynomial"||!((t=r.forwardCoefficients)!=null&&t.length)||!((i=r.inverseCoefficients)!=null&&i.length))throw new O("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const r=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),i=await Promise.all([r,t]);let n;if(i[0]){let a=i[0].fields;const o=i[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":se.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&i[1]&&(n=ht.parse(i[1]).recordSet),Ne.fromJSON(n)}_buildCacheFilePath(e,r,t,i,n){const a=this._getPackageSize(!!n),o=Math.floor(r/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let d="L";d+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,m=i==null?void 0:i[0];if(u==null||!m)return`${this.url}/_alllayers/${d}/${c}.bundle`;let f="_yxs";if(!n){f=u.variables.find(h=>h.name===m.variableName).dimensions[0].values.indexOf(m.values[0]).toString(16);const y=4-f.length;for(let h=0;h<y;h++)f="0"+f;f="S"+f}const p=this._getVariableFolderName(n||m.variableName);return`${this.url}/_alllayers/${p}/${f}/${d}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:r}=this.rasterInfo.storageInfo;return e&&r!=null?r.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:r}=this.rasterInfo,{transposeInfo:t}=r;return e&&t!=null?t.tileSize:r.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,r,t=!1){const i=this._getPackageSize(t),n=i*(e%i)+r%i;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,r){const t=e.subarray(r,r+8);let i,n=0;for(i=0;i<5;i++)n|=(255&t[i])<<8*i;const a=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&t[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let r=e.toString(16);if(r.length!==4){let t=4-r.length;for(;t-- >0;)r="0"+r}return r}};I([v({readOnly:!0})],fe.prototype,"storageInfo",void 0),I([v({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=I([Q("esri.layers.support.rasterDatasets.CloudRaster")],fe);const qi=fe;let de=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const r=this.data,{pixelBlock:t,statistics:i,histograms:n,name:a,keyProperties:o,nativeExtent:l,transform:c}=this.data,{width:d,height:u,pixelType:m}=t,f=r.extent??new H({xmin:-.5,ymin:.5,xmax:d-.5,ymax:u-.5,spatialReference:new q({wkid:3857})}),p=r.isPseudoSpatialReference??!r.extent,y={x:f.width/d,y:f.height/u},h=new ye({width:d,height:u,pixelType:m,extent:f,nativeExtent:l,transform:c,pixelSize:y,spatialReference:f.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:i,isPseudoSpatialReference:p,histograms:n});this.createRemoteDatasetStorageInfo(h,512,512),this._set("rasterInfo",h),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,r,t,i={}){const n=this._pixelBlockTiles.get(`${e}/${r}/${t}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,r,t){var d,u;const i=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:r,maximumPyramidLevel:i},t):Promise.resolve(Ri(e,r,i)),a=this.rasterInfo.statistics!=null,o=this.rasterInfo.histograms!=null,l=a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},t):Promise.resolve(ni(e)),c=await ot([n,l]);if(!c[0].value&&c[1].value)throw new O("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,a||(this.rasterInfo.statistics=(d=c[1].value)==null?void 0:d.statistics),o||(this.rasterInfo.histograms=(u=c[1].value)==null?void 0:u.histograms)}};I([v({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),I([v()],de.prototype,"data",void 0),de=I([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const Gi=de;function ue(s,e){if(!s||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=ue(s,r);for(let a=0;a<n.length;a++)ue(n[a],e).forEach(o=>t.push(o));return t}const i=s.getElementsByTagNameNS("*",r);if(!i||i.length===0)return[];for(let n=0;n<i.length;n++)t.push(i[n]||i.item(n));return t}function U(s,e){if(!s||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=ue(s,r);return t.length>0?e?U(t[0],e):t[0]:null}function K(s,e=null){const r=e?U(s,e):s;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function ji(s,e){const r=ue(s,e),t=[];let i;for(let n=0;n<r.length;n++)i=r[n].textContent||r[n].nodeValue,i&&(i=i.trim(),i!==""&&t.push(i));return t}function we(s,e){return ji(s,e).map(r=>Number(r))}function ne(s,e){const r=K(s,e);return Number(r)}function _e(s,e){var i;const r=(i=s==null?void 0:s.nodeName)==null?void 0:i.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function it(s,e){if(!s||!e)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(e[t]);return r}function Ui(s){const e=U(s,"GeodataXform"),r=Re(ne(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=ne(e,"PolynomialOrder")??1,i=we(e,"CoeffX/Double"),n=we(e,"CoeffY/Double"),a=we(e,"InverseCoeffX/Double"),o=we(e,"InverseCoeffY/Double"),l=it(i,n),c=it(a,o);return{spatialReference:r,transform:l&&c&&l.length&&c.length?new Ee({spatialReference:r,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Vi(s){var m;const e=ne(s,"NoDataValue"),r=U(s,"Histograms/HistItem"),t=ne(r,"HistMin"),i=ne(r,"HistMax"),n=ne(r,"BucketCount"),a=(m=K(r,"HistCounts"))==null?void 0:m.split("|").map(f=>Number(f));let o,l,c,d;ue(s,"Metadata/MDI").forEach(f=>{const p=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":d=p}});const u=ne(s,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&i!=null?{min:t,max:i,size:n||a.length,counts:a}:null,sourceBandIndex:u,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:d}:null}}function Re(s){if(!s)return null;let e=Number(s);if(!isNaN(e)&&e!==0)return new q({wkid:e});if((s=String(s)).startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const r=s.indexOf("VERTCS"),t=s.indexOf("PROJCS"),i=t>-1?t:s.indexOf("GEOGCS");if(i===-1)return null;const n=s.slice(i,s.lastIndexOf("]",r)+1).trim(),a=s.slice(r,s.lastIndexOf("]")).trim();e=Fe(n);const o=new q(e?{wkid:e}:{wkt:n}),l=Fe(a);return l&&(o.vcsWkid=l),o}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(e=Fe(s),new q(e!==0?{wkid:e}:{wkt:s})):null}function Fe(s){var i;const e=s.replaceAll("]","[").replaceAll('"',"").split("[").map(n=>n.trim()).filter(n=>n!==""),r=e[e.length-1].split(","),t=(i=r[0])==null?void 0:i.toLowerCase();if((t==="epsg"||t==="esri")&&s.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&n!==0)return n}return 0}function ze(s){var t;if(((t=s==null?void 0:s.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach(i=>{if(i.nodeType===1){if(_e(i,"SRS")){if(!e.spatialReference){const n=K(i);e.spatialReference=Re(n)}}else if(_e(i,"Metadata"))if(i.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Ui(i);e.transform=a,e.spatialReference||(e.spatialReference=n)}else ue(i,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(_e(i,"PAMRasterBand")){const n=Vi(i);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const r=e.rasterBands;if(r.length){const i=!!r[0].statistics;e.statistics=i?r.map(a=>a.statistics).filter(Me):null;const n=!!r[0].histogram;e.histograms=n?r.map(a=>a.histogram).filter(Me):null}return e}let Se=class extends ae{async open(s){await this.init();const e=await this._fetchData(s);let{spatialReference:r,statistics:t,histograms:i,transform:n}=await this._fetchAuxiliaryData(s);const a=!r;a&&(r=new q({wkid:3857})),i!=null&&i.length&&t==null&&(t=Je(i));const{width:o,height:l}=e;let c=new H({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const d=n?n.forwardTransform(c):c;let u=!0;if(n){const f=n.forwardCoefficients;u=f&&f[1]===0&&f[2]===0,u&&(n=null,c=d)}const m=new Gi({data:{extent:d,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await m.open(),m.data=null,this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(s,e,r,t={}){return this._inMemoryRaster.fetchRawTile(s,e,r,t)}async _fetchData(s){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=ai(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new O("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),i=t==="gif"||t==="bmp"||!It("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:i,hasNoZlibMask:!0});if(n==null)throw new O("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(s){var c;const e=s==null?void 0:s.signal,r=this.ioConfig.skipExtensions??[],t=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n=i==="JPG"?"jgw":i==="PNG"?"pgw":i==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ot([t,a]);if(e!=null&&e.aborted)throw bt();const l=ze((c=o[0].value)==null?void 0:c.data);if(!l.transform){const d=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(u=>Number(u)):null;l.transform=(d==null?void 0:d.length)===6?new Ee({forwardCoefficients:[d[4],d[5],d[0],-d[1],d[2],-d[3]]}):null}return l}};I([v({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=I([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Se);const Ie=Se;let me=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var _,k;await this.init();const r=e&&e.signal,t=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=t.data;if(this.sourceJSON=i,!i)throw new O("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new O("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(n.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=i.name)==null?void 0:_.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:r});if(a==null)throw new O("image-server-raster:open","cannot initialize image service");const o=this.tileType==="Map"?Yi(i.tileInfo,i):Z.fromJSON(i.tileInfo);St(o);const[l,c]=this._computeMinMaxLOD(a,o),{extent:d,pixelSize:u}=a,m=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:p}=o;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>m||!p.some(S=>Math.abs(S.resolution-f)<m))&&(u.x=u.y=l.resolution,a.width=Math.ceil((d.xmax-d.xmin)/u.x-.1),a.height=Math.ceil((d.ymax-d.ymin)/u.y-.1));const y=l.level-c.level,[h,g]=o.size,x=[],w=[];p.forEach((S,M)=>{S.level>=c.level&&S.level<=l.level&&x.push({x:S.resolution,y:S.resolution}),M<p.length-1&&w.push(Math.round(10*S.resolution/p[M+1].resolution)/10)}),x.sort((S,M)=>S.x-M.x);const b=this.computeBlockBoundary(d,h,g,o.origin,x,y),T=x.length>1?x.slice(1):null;let R;i.transposeInfo&&(R={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((k=a.keyProperties)==null?void 0:k._yxs.PacketSize)??0});const F=w.length<=1||w.length>=3&&w.slice(0,w.length-1).every(S=>S===w[0])?w[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/y))/10;if(a.storageInfo=new pe({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:T,pyramidScalingFactor:F,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:y,tileInfo:o,transposeInfo:R,blockBoundary:b}),this._fixGCSShift(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const S={tileInfo:a.storageInfo.tileInfo,parsedUrl:Rt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Di({layer:S})}}async fetchRawTile(e,r,t,i={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:o}=n,l=o!=null&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,d=`${this.url}/tile/${c}/${r}/${t}`,u=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:m}=await this.request(d,{query:u,responseType:"array-buffer",signal:i.signal});if(!m)return null;const f=l?o.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(m,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(p==null)return null;const y=n.blockBoundary[e];if(n.compression!=="jpg"||t>y.minCol&&t<y.maxCol&&r>y.minRow&&r<y.maxRow)return p;const{origin:h,blockWidth:g,blockHeight:x}=n,{x:w,y:b}=this.getPyramidPixelSize(e),T=Math.round((a.xmin-h.x)/w)%g,R=Math.round((a.xmax-h.x)/w)%g||g,F=Math.round((h.y-a.ymax)/b)%x,_=Math.round((h.y-a.ymin)/b)%x||x,k=t===y.minCol?T:0,S=r===y.minRow?F:0,M=t===y.maxCol?R:g,P=r===y.maxRow?_:x;return vi(p,{x:k,y:S},{width:M-k,height:P-S}),p}getSliceIndex(e){if(!this._slices||e==null||e.length===0)return null;const r=e;for(let t=0;t<this._slices.length;t++){const i=this._slices[t].multidimensionalDefinition;if(i.length===r.length&&!i.some(n=>{const a=r.find(o=>n.variableName===o.variableName&&o.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return t}return null}async fetchVariableStatisticsHistograms(e,r){const t=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.statistics}),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.histograms}),n=await Promise.all([t,i]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,r={}){if(!this._tilemapCache)return 0;let t=this.identifyPixelLocation(e,0,r.datumTransformation);if(t===null)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-i+this._levelOffset;const o=t.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,t.row,t.col,r)==="available")break}catch{}if(a--,i++,t=this.identifyPixelLocation(o,i,r.datumTransformation),t===null)return null}return a===-1||t==null?null:i}async _fetchRasterInfo(e){const r=this.sourceJSON;if(this.tileType==="Map"){const o=r.fullExtent||r.extent,l=Math.ceil((o.xmax-o.xmin)/r.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/r.pixelSizeY-.1),d=q.fromJSON(r.spatialReference||o.spatialReference),u=new A({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:d});return new ye({width:l,height:c,bandCount:3,extent:H.fromJSON(o),spatialReference:d,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=e,i=Yt(this.url,this.sourceJSON,{signal:t,query:this.ioConfig.customFetchParameters}),n=r.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data&&o.data.slices).catch(()=>null):null,a=await Promise.all([i,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:r,spatialReference:t}=e;r.xmin>-1&&r.xmax>181&&(t!=null&&t.wkid)&&t.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Oi,e.extent=e.transform.forwardTransform(r))}_computeMinMaxLOD(e,r){const{pixelSize:t}=e,i=.5/e.width*t.x,{lods:n}=r,a=r.lodAt(Math.max.apply(null,n.map(f=>f.level))),o=r.lodAt(Math.min.apply(null,n.map(f=>f.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=n[0].level,[a,o];if(l==="Raster")return[n.find(f=>f.resolution===t.x)??a,o];const{minScale:c,maxScale:d}=this.sourceJSON;let u=a;d>0&&(u=n.find(f=>Math.abs(f.scale-d)<i),u||(u=n.filter(f=>f.scale>d).sort((f,p)=>f.scale>p.scale?1:-1)[0]??a));let m=o;return c>0&&(m=n.find(f=>Math.abs(f.scale-c)<i)??o,this._levelOffset=m.level-o.level),[u,m]}};function Yi(s,e){if(!s)return null;const{minScale:r,maxScale:t,minLOD:i,maxLOD:n}=e;if(i!=null&&n!=null)return Z.fromJSON({...s,lods:s.lods.filter(({level:a})=>a!=null&&a>=i&&a<=n)});if(r!==0&&t!==0){const a=c=>Math.round(1e4*c)/1e4,o=r?a(r):1/0,l=t?a(t):-1/0;return Z.fromJSON({...s,lods:s.lods.filter(c=>{const d=a(c.scale);return d<=o&&d>=l})})}return Z.fromJSON(s)}I([v({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([v()],me.prototype,"tileType",void 0),me=I([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const Xi=me,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const te=new Map;te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let le=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(s){var y;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=s?s.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:i}=this._parseHeader(r.data);if(((y=this.ioConfig.skipExtensions)==null?void 0:y.indexOf("aux.xml"))===-1){const h=await this._fetchAuxiliaryData(s);h!=null&&(t.statistics=h.statistics??t.statistics,t.histograms=h.histograms,h.histograms&&t.statistics==null&&(t.statistics=Je(h.histograms)))}this._set("rasterInfo",t),this._files=i;const n=await this.request(i.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:d}=this.rasterInfo,u=[],m=this._getBandSegmentCount();let f=0,p=-1;for(;f<this._storageIndex.length;){p++;const h=Math.ceil(c/a/l**p)-1,g=Math.ceil(d/o/l**p)-1;f+=(h+1)*(g+1)*m*4,u.push({maxRow:g,maxCol:h,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=u,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){const{blockWidth:i,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[s];if(!o||o.maxRow<e||o.maxCol<r||o.minRow>e||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:d,actualTileWidth:u,actualTileHeight:m}=this._getTileLocation(s,e,r);if(!d||d.length===0)return null;if(d[0].from===0&&d[0].to===0){const S=new Uint8Array(i*n);return new ee({width:i,height:n,pixels:null,mask:S,validPixelCount:0})}const{bandIds:f}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let h=0;for(h=0;h<p;h++)f&&!f.includes(h)||y.push(this.request(this._files.data,{range:{from:d[h].from,to:d[h].to},responseType:"array-buffer",signal:t.signal}));const g=await Promise.all(y),x=g.map(S=>S.data.byteLength).reduce((S,M)=>S+M),w=new Uint8Array(x);let b=0;for(h=0;h<p;h++)w.set(new Uint8Array(g[h].data),b),b+=g[h].data.byteLength;const T=te.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(w.buffer,{width:i,height:n,format:T,planes:(f==null?void 0:f.length)||l,pixelType:c});if(R==null)return null;let{noDataValue:F}=this.rasterInfo;if(F!=null&&T!=="lerc"&&!R.mask&&(F=F[0],F!=null)){const S=R.width*R.height,M=new Uint8Array(S);if(Math.abs(F)>1e24)for(h=0;h<S;h++)Math.abs((R.pixels[0][h]-F)/F)>1e-6&&(M[h]=1);else for(h=0;h<S;h++)R.pixels[0][h]!==F&&(M[h]=1);R.mask=M}let _=0,k=0;if(u!==i||m!==n){let S=R.mask;if(S)for(h=0;h<n;h++)if(k=h*i,h<m)for(_=u;_<i;_++)S[k+_]=0;else for(_=0;_<i;_++)S[k+_]=0;else for(S=new Uint8Array(i*n),R.mask=S,h=0;h<m;h++)for(k=h*i,_=0;_<u;_++)S[k+_]=1}return R}_parseIndex(s){if(s.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,i,n,a;if(oi){for(r=new Uint8Array(s),i=new ArrayBuffer(s.byteLength),t=new Uint8Array(i),n=0;n<s.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=r[4*n+3-a];e=new Uint32Array(i)}else e=new Uint32Array(s);return e}_getBandSegmentCount(){return te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(s,e,r){const{blockWidth:t,blockHeight:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,d,u,m=0,f=0;for(u=0;u<s;u++)f=n**u,c=Math.ceil(a/t/f),d=Math.ceil(o/i/f),m+=c*d;f=n**s,c=Math.ceil(a/t/f),d=Math.ceil(o/i/f),m+=e*c+r,m*=4*l;const p=this._storageIndex.subarray(m,m+4*l);let y=0,h=0;const g=[];for(let x=0;x<l;x++)y=p[4*x]*2**32+p[4*x+1],h=y+p[4*x+2]*2**32+p[4*x+3],g.push({from:y,to:h});return{ranges:g,actualTileWidth:r<c-1?t:Math.ceil(a/f)-t*(c-1),actualTileHeight:e<d-1?i:Math.ceil(o/f)-i*(d-1)}}_parseHeader(s){const e=U(s,"MRF_META/Raster");if(!e)throw new O("mrf:open","not a valid MRF format");const r=U(e,"Size"),t=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!te.has(a))throw new O("mrf:open","currently does not support compression "+a);const o=K(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new O("mrf:open","currently does not support pixel type "+o);const c=U(e,"PageSize"),d=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),m=U(e,"DataValues");let f,p;if(m&&(p=m.getAttribute("NoData"),p!=null&&(f=p.trim().split(" ").map(M=>parseFloat(M)))),U(s,"MRF_META/CachedSource"))throw new O("mrf:open","currently does not support MRF referencing other data files");const y=U(s,"MRF_META/GeoTags"),h=U(y,"BoundingBox");let g,x=!1;if(h!=null){const M=parseFloat(h.getAttribute("minx")),P=parseFloat(h.getAttribute("miny")),E=parseFloat(h.getAttribute("maxx")),$=parseFloat(h.getAttribute("maxy")),C=K(y,"Projection")||"";let D=q.WGS84;if(C!=="LOCAL_CS[]")if(C.toLowerCase().startsWith("epsg:")){const N=Number(C.slice(5));isNaN(N)||N===0||(D=new q({wkid:N}))}else D=Re(C)??q.WGS84;else x=!0,D=new q({wkid:3857});g=new H(M,P,E,$),g.spatialReference=D}else x=!0,g=new H({xmin:-.5,ymin:.5-i,xmax:t-.5,ymax:.5,spatialReference:new q({wkid:3857})});const w=U(s,"MRF_META/Rsets"),b=parseInt(w&&w.getAttribute("scale")||"2",10),T=g.spatialReference,R=new pe({origin:new A({x:g.xmin,y:g.ymax,spatialReference:T}),blockWidth:d,blockHeight:u,pyramidBlockWidth:d,pyramidBlockHeight:u,compression:a,pyramidScalingFactor:b}),F=new A({x:g.width/t,y:g.height/i,spatialReference:T}),_=new ye({width:t,height:i,extent:g,isPseudoSpatialReference:x,spatialReference:T,bandCount:n,pixelType:l,pixelSize:F,noDataValue:f,storageInfo:R}),k=K(s,"datafile"),S=K(s,"IndexFile");return{rasterInfo:_,files:{mrf:this.url,index:S||this.url.replace(".mrf",".idx"),data:k||this.url.replace(".mrf",te.get(a).blobExtension)}}}async _fetchAuxiliaryData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return ze(e)}catch{return null}}};I([v()],le.prototype,"_files",void 0),I([v()],le.prototype,"_storageIndex",void 0),I([v({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=I([Q("esri.layers.support.rasterIO.MRFRaster")],le);const Ki=le,ke=(s,e)=>{var r;return(r=s.get(e))==null?void 0:r.values},he=(s,e)=>{var r,t;return(t=(r=s.get(e))==null?void 0:r.values)==null?void 0:t[0]};let re=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(s){var p,y,h,g;await this.init();const e=s?s.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new O("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:i,isBigTiff:n}=li(r),a=[];await this._readIFDs(a,r,t,i,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=ci(a),d=ui(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:d,...o},this._set("rasterInfo",l),!o.isSupported)throw new O("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new O("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const u=(y=(p=a[0].get("PREDICTOR"))==null?void 0:p.values)==null?void 0:y[0];if(((g=(h=a[0].get("SAMPLEFORMAT"))==null?void 0:h.values)==null?void 0:g[0])===3&&u===2)throw new O("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:f=[]}=this.ioConfig;if(!f.includes("aux.xml")){const x=await this._fetchAuxiliaryMetaData(s);x!=null&&this._processPAMInfo(x,l)}f.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(s),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(s,e,r))return null;const i=await this._fetchRawTiffTile(s,e,r,!1,t);if(i!=null&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(s,e,r,!0,t);a!=null&&a.pixels[0]instanceof Uint8Array&&(i.mask=a.pixels[0])}return i}_parseIFDs(s){var P,E;const e=hi(s),{width:r,height:t,tileWidth:i,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:d,pyramidBlockWidth:u,pyramidBlockHeight:m,tileBoundary:f,affine:p,metadata:y}=e,h=((P=e.extent.spatialReference)==null?void 0:P.wkt)||((E=e.extent.spatialReference)==null?void 0:E.wkid);let g=Re(h),x=!!e.isPseudoGeographic;g==null&&(x=!0,g=new q({wkid:3857}));const w=new H({...e.extent,spatialReference:g}),b=new A(w?{x:w.xmin,y:w.ymax,spatialReference:g}:{x:0,y:0}),T=new pe({blockWidth:i,blockHeight:n,pyramidBlockWidth:u,pyramidBlockHeight:m,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:d,blockBoundary:f}),R=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:g}),F=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let _=null;const k=he(s[0],"PHOTOMETRICINTERPRETATION"),S=ke(s[0],"COLORMAP");if(k<=3&&(S==null?void 0:S.length)>3&&S.length%3==0){_=[];const $=S.length/3;for(let C=0;C<$;C++)_.push([C,S[C]>>>8,S[C+$]>>>8,S[C+2*$]>>>8])}const M=new ye({width:r,height:t,bandCount:a,pixelType:o,pixelSize:R,storageInfo:T,spatialReference:g,isPseudoSpatialReference:x,keyProperties:F,extent:w,colormap:_,statistics:y?y.statistics:null});return p!=null&&p.length&&(M.nativeExtent=new H({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:g}),M.transform=new Ee({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:g}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:M}}_processPAMInfo(s,e){if(e.statistics=s.statistics??e.statistics,e.histograms=s.histograms,s.histograms&&e.statistics==null&&(e.statistics=Je(s.histograms)),s.transform&&e.transform==null){e.transform=s.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&s.spatialReference&&(e.spatialReference=s.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(s,e,r,t,i,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+i,to:t+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=t+i,t=0);const o=await this._readIFD(e,r,t,i,ge.TIFF_TAGS,n,a);if(s.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(s,e,r,o.nextIFD-i,i,n,a)}async _readIFD(s,e,r,t,i=ge.TIFF_TAGS,n=4,a){var l,c;if(!s)return null;const o=fi(s,e,r,t,i,n);if(o.success){const d=[];if((l=o.ifd)==null||l.forEach(u=>{u.values||d.push(u)}),d.length>0){const u=d.map(f=>f.offlineOffsetSize).filter(Me),m=Math.min.apply(null,u.map(f=>f[0]));if(Math.min.apply(null,u.map(f=>f[0]+f[1]))-m<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:m,to:m+this._bufferSize},responseType:"array-buffer",signal:a});s=f,t=m,d.forEach(p=>di(s,e,p,t))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const u=o.ifd.get("GEOKEYDIRECTORY"),m=u==null?void 0:u.values;if(m&&m.length>4){const f=m[0]+"."+m[1]+"."+m[2],p=await this._readIFD(s,e,u.valueOffset+6-t,t,ge.GEO_KEYS,2,a);u.data=p.ifd,u.data&&u.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==s.byteLength)return(s=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(s,e,0,t,ge.TIFF_TAGS,4,a)}async _fetchRawTiffTile(s,e,r,t,i={}){const n=this._getTileLocation(s,e,r,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,d=a.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:i.signal})),u=await Promise.all(d),m=u.map(R=>R.data.byteLength).reduce((R,F)=>R+F),f=u.length===1?u[0].data:new ArrayBuffer(m),p=[0],y=[0];if(u.length>1){const R=new Uint8Array(f);for(let F=0,_=0;F<u.length;F++){const k=u[F].data;R.set(new Uint8Array(k),_),p[F]=_,_+=k.byteLength,y[F]=k.byteLength}}const{blockWidth:h,blockHeight:g}=this.getBlockWidthHeight(s),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:y},width:h,height:g,planes:null,pixelType:null});if(x==null)return null;let w,b,T;if(o!==h||l!==g){let R=x.mask;if(R)for(w=0;w<g;w++)if(T=w*h,w<l)for(b=o;b<h;b++)R[T+b]=0;else for(b=0;b<h;b++)R[T+b]=0;else for(R=new Uint8Array(h*g),x.mask=R,w=0;w<l;w++)for(T=w*h,b=0;b<o;b++)R[T+b]=1}return x}_getTileLocation(s,e,r,t=!1){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,a=s===0?0:s-(i-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=mi(l,o),d=ke(l,"TILEOFFSETS");if(d===void 0)return null;const u=ke(l,"TILEBYTECOUNTS"),{minRow:m,minCol:f,maxRow:p,maxCol:y}=n[a];if(e>p||r>y||e<m||r<f)return null;const h=he(l,"IMAGEWIDTH"),g=he(l,"IMAGELENGTH"),x=he(l,"TILEWIDTH"),w=he(l,"TILELENGTH"),b=[];if(c){const{bandCount:T}=this.rasterInfo;for(let R=0;R<T;R++){const F=R*(p+1)*(y+1)+e*(y+1)+r;b[R]={from:d[F],to:d[F]+u[F]-1}}}else{const T=e*(y+1)+r;b.push({from:d[T],to:d[T]+u[T]-1})}for(let T=0;T<b.length;T++)if(b[T].from==null||!b[T].to)return null;return{ranges:b,ifd:l,actualTileWidth:r===y&&h%x||x,actualTileHeight:e===p&&g%w||w}}async _fetchAuxiliaryMetaData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return ze(e)}catch{return null}}async _fetchAuxiliaryTable(s){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=ht.parse(e);return r!=null&&r.recordSet?Ne.fromJSON(r.recordSet):null}catch{return null}}};I([v()],re.prototype,"_files",void 0),I([v()],re.prototype,"_headerInfo",void 0),I([v()],re.prototype,"_bufferSize",void 0),I([v({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),re=I([Q("esri.layers.support.rasterDatasets.TIFFRaster")],re);const Qi=re,W=new Map;W.set("CRF",{desc:"Cloud Raster Format",constructor:qi}),W.set("MRF",{desc:"Meta Raster Format",constructor:Ki}),W.set("TIFF",{desc:"GeoTIFF",constructor:Qi}),W.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Xi}),W.set("JPG",{desc:"JPG Raster Format",constructor:Ie}),W.set("PNG",{desc:"PNG Raster Format",constructor:Ie}),W.set("GIF",{desc:"GIF Raster Format",constructor:Ie}),W.set("BMP",{desc:"BMP Raster Format",constructor:Ie});class Zi{static get supportedFormats(){const e=new Set;return W.forEach((r,t)=>e.add(t)),e}static async open(e){const{url:r,ioConfig:t,sourceJSON:i}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:i,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(t!=null&&t.enableCRF))throw new O("rasterfactory:open",`cannot open raster: ${r}`);return o=W.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new O("rasterfactory:open","not a supported format "+n);const c=Array.from(W.keys());let d=0;const u=()=>(n=c[d++],n&&(n!=="CRF"||t!=null&&t.enableCRF)?(o=W.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>u())):null);return u()}static register(e,r,t){W.has(e.toUpperCase())||W.set(e.toUpperCase(),{desc:r,constructor:t})}}let J=class extends vt(Tt(_t(Ft(kt(Li(Mt(Pt(Ct(Ot(At)))))))))){constructor(...s){super(...s),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(s,e){return typeof s=="string"?{url:s,...e}:s}load(s){const e=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch($t).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o;const s=[new ce({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ce({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,r=e==null?void 0:e.attributeTable,t=r!=null?r.fields:null,i="Raster.";if(t){const l=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const d=c.clone();return d.name=i+c.name,d});s.push(...l)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){const l=(o=a.variables[0].unit)==null?void 0:o.trim(),c="Magnitude"+(l?` (${l})`:"");s.push(new ce({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),s.push(new ce({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return s}createPopupTemplate(s){const{rasterFields:e}=this,r=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Dt({fields:e,title:this.title},{...s,visibleFieldNames:r})}async generateRasterInfo(s,e){var r;if(!(s=Be(Pe,s)))return this.rasterInfo;try{const t={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(a=>t[a.url]=a);const i=Oe(((r=s.functionDefinition)==null?void 0:r.toJSON())??s.toJSON(),t),n=new $e({rasterFunction:i});return await n.open(e),n.rasterInfo}catch(t){throw t instanceof O?t:new O("imagery-tile-layer","the given raster function is not supported")}}write(s,e){const r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(s,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new O("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(s){var t;let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:i}=this,n=[this.url];i&&$i(i.toJSON(),n);const a=await Promise.all(n.map(l=>Zi.open({url:l,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),o=a.findIndex(l=>l==null);if(o>-1)throw new O("imagery-tile-layer:open",`cannot open raster: ${n[o]}`);if(this._primaryRasters=a,i){const l={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>l[u.url]=u);const c=Oe(((t=i.functionDefinition)==null?void 0:t.toJSON())??i.toJSON(),l),d=new $e({rasterFunction:c});try{await d.open(),this.raster=d}catch(u){const m=De.getLogger(this);u instanceof O&&m.error("imagery-tile-layer:open",u.message),m.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=a[0]}}else this.raster=a[0]}const r=this.raster.rasterInfo;if(!r)throw new O("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const i=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(i,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Bt(()=>this.customParameters,i=>{this.raster&&(this.raster.ioConfig.customFetchParameters=i)}))}};I([v()],J.prototype,"_primaryRasters",void 0),I([v({type:[Nt],json:{write:{overridePolicy(){var s;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((s=this.bandIds)==null?void 0:s.join(","))!=="0,1,2"}}}}})],J.prototype,"bandIds",void 0),I([v({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Jt(Xt)],J.prototype,"interpolation",void 0),I([v(Et)],J.prototype,"legendEnabled",void 0),I([v({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],J.prototype,"isReference",void 0),I([v({type:["show","hide"]})],J.prototype,"listMode",void 0),I([v({json:{read:!0,write:!0}})],J.prototype,"blendMode",void 0),I([v()],J.prototype,"sourceJSON",void 0),I([v({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],J.prototype,"version",void 0),I([v({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),I([v({type:["ArcGISTiledImageServiceLayer"]})],J.prototype,"operationalLayerType",void 0),I([v({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(s,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(s,e,r){e[r]=!s}}}})],J.prototype,"popupEnabled",void 0),I([v({type:zt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],J.prototype,"popupTemplate",void 0),I([v({readOnly:!0})],J.prototype,"defaultPopupTemplate",null),I([v({readOnly:!0,type:[ce]})],J.prototype,"fields",void 0),I([v({readOnly:!0,type:[ce]})],J.prototype,"rasterFields",null),J=I([Q("esri.layers.ImageryTileLayer")],J);const Ss=J;export{Ss as default};
